'use client';
"use strict";
require("./index.css");
var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __objRest = (source, exclude) => {
  var target = {};
  for (var prop in source)
    if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0)
      target[prop] = source[prop];
  if (source != null && __getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(source)) {
      if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop))
        target[prop] = source[prop];
    }
  return target;
};
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  // If the importer is in node compatibility mode or this is not an ESM
  // file that has been converted to a CommonJS file using a Babel-
  // compatible transform (i.e. "__esModule" has not been set), then set
  // "default" to the CommonJS "module.exports" for node compatibility.
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
  mod
));
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/components/flex/index.ts
var flex_exports = {};
__export(flex_exports, {
  Flex: () => Flex
});
module.exports = __toCommonJS(flex_exports);

// src/components/flex/flex.tsx
var import_react2 = require("react");

// src/utils/create-split-props.ts
var createSplitProps = () => (props, keys) => keys.reduce(
  (previousValue, currentValue) => {
    const [target, source] = previousValue;
    const key = currentValue;
    if (source[key] !== void 0) {
      target[key] = source[key];
    }
    delete source[key];
    return [target, source];
  },
  [{}, __spreadValues({}, props)]
);

// src/components/box/box.tsx
var import_react = require("react");
var import_react_primitive = require("@radix-ui/react-primitive");
var import_clsx = __toESM(require("clsx"));

// src/styles/sprinkles.css.ts
var import_createRuntimeFn = require("rainbow-sprinkles/createRuntimeFn");
var sprinkles = (0, import_createRuntimeFn.createRuntimeFn)(function() {
  var x = { config: { paddingX: { mappings: ["paddingLeft", "paddingRight"] }, paddingY: { mappings: ["paddingTop", "paddingBottom"] }, marginX: { mappings: ["marginLeft", "marginRight"] }, marginY: { mappings: ["marginTop", "marginBottom"] }, position: { vars: { "default": "var(--sprinkles-position__11krxun0)" }, dynamic: { "default": "sprinkles-position__11krxun1" }, dynamicScale: true, name: "position" }, display: { vars: { "default": "var(--sprinkles-display__11krxun2)" }, dynamic: { "default": "sprinkles-display__11krxun3" }, dynamicScale: true, name: "display" }, alignItems: { vars: { "default": "var(--sprinkles-alignItems__11krxun4)" }, dynamic: { "default": "sprinkles-alignItems__11krxun5" }, dynamicScale: true, name: "alignItems" }, justifyContent: { vars: { "default": "var(--sprinkles-justifyContent__11krxun6)" }, dynamic: { "default": "sprinkles-justifyContent__11krxun7" }, dynamicScale: true, name: "justifyContent" }, flexDirection: { vars: { "default": "var(--sprinkles-flexDirection__11krxun8)" }, dynamic: { "default": "sprinkles-flexDirection__11krxun9" }, dynamicScale: true, name: "flexDirection" }, gap: { vars: { "default": "var(--sprinkles-gap__11krxuna)" }, dynamic: { "default": "sprinkles-gap__11krxunb" }, dynamicScale: { "100": "var(--vapor-size-space-100)", "150": "var(--vapor-size-space-150)", "175": "var(--vapor-size-space-175)", "200": "var(--vapor-size-space-200)", "225": "var(--vapor-size-space-225)", "250": "var(--vapor-size-space-250)", "300": "var(--vapor-size-space-300)", "400": "var(--vapor-size-space-400)", "500": "var(--vapor-size-space-500)", "600": "var(--vapor-size-space-600)", "700": "var(--vapor-size-space-700)", "800": "var(--vapor-size-space-800)", "900": "var(--vapor-size-space-900)", "000": "var(--vapor-size-space-000)", "025": "var(--vapor-size-space-025)", "050": "var(--vapor-size-space-050)", "075": "var(--vapor-size-space-075)" }, name: "gap" }, alignContent: { vars: { "default": "var(--sprinkles-alignContent__11krxunc)" }, dynamic: { "default": "sprinkles-alignContent__11krxund" }, dynamicScale: true, name: "alignContent" }, padding: { vars: { "default": "var(--sprinkles-padding__11krxune)" }, dynamic: { "default": "sprinkles-padding__11krxunf" }, dynamicScale: void 0, name: "padding" }, paddingTop: { vars: { "default": "var(--sprinkles-paddingTop__11krxung)" }, dynamic: { "default": "sprinkles-paddingTop__11krxunh" }, dynamicScale: void 0, name: "paddingTop" }, paddingBottom: { vars: { "default": "var(--sprinkles-paddingBottom__11krxuni)" }, dynamic: { "default": "sprinkles-paddingBottom__11krxunj" }, dynamicScale: void 0, name: "paddingBottom" }, paddingLeft: { vars: { "default": "var(--sprinkles-paddingLeft__11krxunk)" }, dynamic: { "default": "sprinkles-paddingLeft__11krxunl" }, dynamicScale: void 0, name: "paddingLeft" }, paddingRight: { vars: { "default": "var(--sprinkles-paddingRight__11krxunm)" }, dynamic: { "default": "sprinkles-paddingRight__11krxunn" }, dynamicScale: void 0, name: "paddingRight" }, margin: { vars: { "default": "var(--sprinkles-margin__11krxuno)" }, dynamic: { "default": "sprinkles-margin__11krxunp" }, dynamicScale: { "100": "var(--vapor-size-space-100)", "150": "var(--vapor-size-space-150)", "175": "var(--vapor-size-space-175)", "200": "var(--vapor-size-space-200)", "225": "var(--vapor-size-space-225)", "250": "var(--vapor-size-space-250)", "300": "var(--vapor-size-space-300)", "400": "var(--vapor-size-space-400)", "500": "var(--vapor-size-space-500)", "600": "var(--vapor-size-space-600)", "700": "var(--vapor-size-space-700)", "800": "var(--vapor-size-space-800)", "900": "var(--vapor-size-space-900)", "000": "var(--vapor-size-space-000)", "025": "var(--vapor-size-space-025)", "050": "var(--vapor-size-space-050)", "075": "var(--vapor-size-space-075)", "-100": "calc(var(--vapor-size-space-100) * -1)", "-150": "calc(var(--vapor-size-space-150) * -1)", "-175": "calc(var(--vapor-size-space-175) * -1)", "-200": "calc(var(--vapor-size-space-200) * -1)", "-225": "calc(var(--vapor-size-space-225) * -1)", "-250": "calc(var(--vapor-size-space-250) * -1)", "-300": "calc(var(--vapor-size-space-300) * -1)", "-400": "calc(var(--vapor-size-space-400) * -1)", "-500": "calc(var(--vapor-size-space-500) * -1)", "-600": "calc(var(--vapor-size-space-600) * -1)", "-700": "calc(var(--vapor-size-space-700) * -1)", "-800": "calc(var(--vapor-size-space-800) * -1)", "-900": "calc(var(--vapor-size-space-900) * -1)", "-000": "calc(var(--vapor-size-space-000) * -1)", "-025": "calc(var(--vapor-size-space-025) * -1)", "-050": "calc(var(--vapor-size-space-050) * -1)", "-075": "calc(var(--vapor-size-space-075) * -1)" }, name: "margin" }, marginTop: { vars: { "default": "var(--sprinkles-marginTop__11krxunq)" }, dynamic: { "default": "sprinkles-marginTop__11krxunr" }, dynamicScale: void 0, name: "marginTop" }, marginBottom: { vars: { "default": "var(--sprinkles-marginBottom__11krxuns)" }, dynamic: { "default": "sprinkles-marginBottom__11krxunt" }, dynamicScale: void 0, name: "marginBottom" }, marginLeft: { vars: { "default": "var(--sprinkles-marginLeft__11krxunu)" }, dynamic: { "default": "sprinkles-marginLeft__11krxunv" }, dynamicScale: void 0, name: "marginLeft" }, marginRight: { vars: { "default": "var(--sprinkles-marginRight__11krxunw)" }, dynamic: { "default": "sprinkles-marginRight__11krxunx" }, dynamicScale: void 0, name: "marginRight" }, width: { vars: { "default": "var(--sprinkles-width__11krxuny)" }, dynamic: { "default": "sprinkles-width__11krxunz" }, dynamicScale: { "100": "var(--vapor-size-dimension-100)", "150": "var(--vapor-size-dimension-150)", "175": "var(--vapor-size-dimension-175)", "200": "var(--vapor-size-dimension-200)", "225": "var(--vapor-size-dimension-225)", "250": "var(--vapor-size-dimension-250)", "300": "var(--vapor-size-dimension-300)", "400": "var(--vapor-size-dimension-400)", "500": "var(--vapor-size-dimension-500)", "600": "var(--vapor-size-dimension-600)", "700": "var(--vapor-size-dimension-700)", "800": "var(--vapor-size-dimension-800)", "025": "var(--vapor-size-dimension-025)", "050": "var(--vapor-size-dimension-050)", "075": "var(--vapor-size-dimension-075)" }, name: "width" }, height: { vars: { "default": "var(--sprinkles-height__11krxun10)" }, dynamic: { "default": "sprinkles-height__11krxun11" }, dynamicScale: void 0, name: "height" }, minWidth: { vars: { "default": "var(--sprinkles-minWidth__11krxun12)" }, dynamic: { "default": "sprinkles-minWidth__11krxun13" }, dynamicScale: void 0, name: "minWidth" }, minHeight: { vars: { "default": "var(--sprinkles-minHeight__11krxun14)" }, dynamic: { "default": "sprinkles-minHeight__11krxun15" }, dynamicScale: void 0, name: "minHeight" }, maxWidth: { vars: { "default": "var(--sprinkles-maxWidth__11krxun16)" }, dynamic: { "default": "sprinkles-maxWidth__11krxun17" }, dynamicScale: void 0, name: "maxWidth" }, maxHeight: { vars: { "default": "var(--sprinkles-maxHeight__11krxun18)" }, dynamic: { "default": "sprinkles-maxHeight__11krxun19" }, dynamicScale: void 0, name: "maxHeight" }, border: { vars: { "default": "var(--sprinkles-border__11krxun1a)" }, dynamic: { "default": "sprinkles-border__11krxun1b" }, dynamicScale: true, name: "border" }, borderRadius: { vars: { "default": "var(--sprinkles-borderRadius__11krxun1c)" }, dynamic: { "default": "sprinkles-borderRadius__11krxun1d" }, dynamicScale: { "100": "var(--vapor-size-borderRadius-100)", "200": "var(--vapor-size-borderRadius-200)", "300": "var(--vapor-size-borderRadius-300)", "400": "var(--vapor-size-borderRadius-400)", "500": "var(--vapor-size-borderRadius-500)", "600": "var(--vapor-size-borderRadius-600)", "700": "var(--vapor-size-borderRadius-700)", "800": "var(--vapor-size-borderRadius-800)", "900": "var(--vapor-size-borderRadius-900)", "000": "var(--vapor-size-borderRadius-000)", "050": "var(--vapor-size-borderRadius-050)" }, name: "borderRadius" }, backgroundColor: { vars: { "default": "var(--sprinkles-backgroundColor__11krxun1e)" }, dynamic: { "default": "sprinkles-backgroundColor__11krxun1f" }, dynamicScale: { "rgb-primary": "var(--vapor-color-background-rgb-primary)", primary: "var(--vapor-color-background-primary)", "rgb-secondary": "var(--vapor-color-background-rgb-secondary)", secondary: "var(--vapor-color-background-secondary)", "rgb-success": "var(--vapor-color-background-rgb-success)", success: "var(--vapor-color-background-success)", "rgb-warning": "var(--vapor-color-background-rgb-warning)", warning: "var(--vapor-color-background-warning)", "rgb-danger": "var(--vapor-color-background-rgb-danger)", danger: "var(--vapor-color-background-danger)", "rgb-hint": "var(--vapor-color-background-rgb-hint)", hint: "var(--vapor-color-background-hint)", "rgb-contrast": "var(--vapor-color-background-rgb-contrast)", contrast: "var(--vapor-color-background-contrast)", "rgb-normal": "var(--vapor-color-background-rgb-normal)", normal: "var(--vapor-color-background-normal)", "normal-lighter": "var(--vapor-color-background-normal-lighter)", "normal-darker": "var(--vapor-color-background-normal-darker)", "blue-050": "var(--vapor-color-blue-050)", "blue-100": "var(--vapor-color-blue-100)", "blue-200": "var(--vapor-color-blue-200)", "blue-300": "var(--vapor-color-blue-300)", "blue-400": "var(--vapor-color-blue-400)", "blue-500": "var(--vapor-color-blue-500)", "blue-600": "var(--vapor-color-blue-600)", "blue-700": "var(--vapor-color-blue-700)", "blue-800": "var(--vapor-color-blue-800)", "blue-900": "var(--vapor-color-blue-900)", "cyan-050": "var(--vapor-color-cyan-050)", "cyan-100": "var(--vapor-color-cyan-100)", "cyan-200": "var(--vapor-color-cyan-200)", "cyan-300": "var(--vapor-color-cyan-300)", "cyan-400": "var(--vapor-color-cyan-400)", "cyan-500": "var(--vapor-color-cyan-500)", "cyan-600": "var(--vapor-color-cyan-600)", "cyan-700": "var(--vapor-color-cyan-700)", "cyan-800": "var(--vapor-color-cyan-800)", "cyan-900": "var(--vapor-color-cyan-900)", "grape-050": "var(--vapor-color-grape-050)", "grape-100": "var(--vapor-color-grape-100)", "grape-200": "var(--vapor-color-grape-200)", "grape-300": "var(--vapor-color-grape-300)", "grape-400": "var(--vapor-color-grape-400)", "grape-500": "var(--vapor-color-grape-500)", "grape-600": "var(--vapor-color-grape-600)", "grape-700": "var(--vapor-color-grape-700)", "grape-800": "var(--vapor-color-grape-800)", "grape-900": "var(--vapor-color-grape-900)", "gray-000": "var(--vapor-color-gray-000)", "gray-050": "var(--vapor-color-gray-050)", "gray-100": "var(--vapor-color-gray-100)", "gray-200": "var(--vapor-color-gray-200)", "gray-300": "var(--vapor-color-gray-300)", "gray-400": "var(--vapor-color-gray-400)", "gray-500": "var(--vapor-color-gray-500)", "gray-600": "var(--vapor-color-gray-600)", "gray-700": "var(--vapor-color-gray-700)", "gray-800": "var(--vapor-color-gray-800)", "gray-900": "var(--vapor-color-gray-900)", "gray-950": "var(--vapor-color-gray-950)", "green-050": "var(--vapor-color-green-050)", "green-100": "var(--vapor-color-green-100)", "green-200": "var(--vapor-color-green-200)", "green-300": "var(--vapor-color-green-300)", "green-400": "var(--vapor-color-green-400)", "green-500": "var(--vapor-color-green-500)", "green-600": "var(--vapor-color-green-600)", "green-700": "var(--vapor-color-green-700)", "green-800": "var(--vapor-color-green-800)", "green-900": "var(--vapor-color-green-900)", "lime-050": "var(--vapor-color-lime-050)", "lime-100": "var(--vapor-color-lime-100)", "lime-200": "var(--vapor-color-lime-200)", "lime-300": "var(--vapor-color-lime-300)", "lime-400": "var(--vapor-color-lime-400)", "lime-500": "var(--vapor-color-lime-500)", "lime-600": "var(--vapor-color-lime-600)", "lime-700": "var(--vapor-color-lime-700)", "lime-800": "var(--vapor-color-lime-800)", "lime-900": "var(--vapor-color-lime-900)", "orange-050": "var(--vapor-color-orange-050)", "orange-100": "var(--vapor-color-orange-100)", "orange-200": "var(--vapor-color-orange-200)", "orange-300": "var(--vapor-color-orange-300)", "orange-400": "var(--vapor-color-orange-400)", "orange-500": "var(--vapor-color-orange-500)", "orange-600": "var(--vapor-color-orange-600)", "orange-700": "var(--vapor-color-orange-700)", "orange-800": "var(--vapor-color-orange-800)", "orange-900": "var(--vapor-color-orange-900)", "pink-050": "var(--vapor-color-pink-050)", "pink-100": "var(--vapor-color-pink-100)", "pink-200": "var(--vapor-color-pink-200)", "pink-300": "var(--vapor-color-pink-300)", "pink-400": "var(--vapor-color-pink-400)", "pink-500": "var(--vapor-color-pink-500)", "pink-600": "var(--vapor-color-pink-600)", "pink-700": "var(--vapor-color-pink-700)", "pink-800": "var(--vapor-color-pink-800)", "pink-900": "var(--vapor-color-pink-900)", "red-050": "var(--vapor-color-red-050)", "red-100": "var(--vapor-color-red-100)", "red-200": "var(--vapor-color-red-200)", "red-300": "var(--vapor-color-red-300)", "red-400": "var(--vapor-color-red-400)", "red-500": "var(--vapor-color-red-500)", "red-600": "var(--vapor-color-red-600)", "red-700": "var(--vapor-color-red-700)", "red-800": "var(--vapor-color-red-800)", "red-900": "var(--vapor-color-red-900)", "violet-050": "var(--vapor-color-violet-050)", "violet-100": "var(--vapor-color-violet-100)", "violet-200": "var(--vapor-color-violet-200)", "violet-300": "var(--vapor-color-violet-300)", "violet-400": "var(--vapor-color-violet-400)", "violet-500": "var(--vapor-color-violet-500)", "violet-600": "var(--vapor-color-violet-600)", "violet-700": "var(--vapor-color-violet-700)", "violet-800": "var(--vapor-color-violet-800)", "violet-900": "var(--vapor-color-violet-900)", "yellow-050": "var(--vapor-color-yellow-050)", "yellow-100": "var(--vapor-color-yellow-100)", "yellow-200": "var(--vapor-color-yellow-200)", "yellow-300": "var(--vapor-color-yellow-300)", "yellow-400": "var(--vapor-color-yellow-400)", "yellow-500": "var(--vapor-color-yellow-500)", "yellow-600": "var(--vapor-color-yellow-600)", "yellow-700": "var(--vapor-color-yellow-700)", "yellow-800": "var(--vapor-color-yellow-800)", "yellow-900": "var(--vapor-color-yellow-900)", black: "var(--vapor-color-black)", white: "var(--vapor-color-white)" }, name: "backgroundColor" }, color: { vars: { "default": "var(--sprinkles-color__11krxun1g)" }, dynamic: { "default": "sprinkles-color__11krxun1h" }, dynamicScale: { primary: "var(--vapor-color-foreground-primary)", "primary-darker": "var(--vapor-color-foreground-primary-darker)", secondary: "var(--vapor-color-foreground-secondary)", "secondary-darker": "var(--vapor-color-foreground-secondary-darker)", success: "var(--vapor-color-foreground-success)", "success-darker": "var(--vapor-color-foreground-success-darker)", warning: "var(--vapor-color-foreground-warning)", "warning-darker": "var(--vapor-color-foreground-warning-darker)", danger: "var(--vapor-color-foreground-danger)", "danger-darker": "var(--vapor-color-foreground-danger-darker)", hint: "var(--vapor-color-foreground-hint)", "hint-darker": "var(--vapor-color-foreground-hint-darker)", contrast: "var(--vapor-color-foreground-contrast)", "contrast-darker": "var(--vapor-color-foreground-contrast-darker)", accent: "var(--vapor-color-foreground-accent)", normal: "var(--vapor-color-foreground-normal)", "normal-lighter": "var(--vapor-color-foreground-normal-lighter)" }, name: "color" }, opacity: { vars: { "default": "var(--sprinkles-opacity__11krxun1i)" }, dynamic: { "default": "sprinkles-opacity__11krxun1j" }, dynamicScale: true, name: "opacity" }, pointerEvents: { vars: { "default": "var(--sprinkles-pointerEvents__11krxun1k)" }, dynamic: { "default": "sprinkles-pointerEvents__11krxun1l" }, dynamicScale: true, name: "pointerEvents" }, overflow: { vars: { "default": "var(--sprinkles-overflow__11krxun1m)" }, dynamic: { "default": "sprinkles-overflow__11krxun1n" }, dynamicScale: true, name: "overflow" }, textAlign: { vars: { "default": "var(--sprinkles-textAlign__11krxun1o)" }, dynamic: { "default": "sprinkles-textAlign__11krxun1p" }, dynamicScale: true, name: "textAlign" } } };
  x.config.padding.dynamicScale = x.config.gap.dynamicScale;
  x.config.paddingTop.dynamicScale = x.config.gap.dynamicScale;
  x.config.paddingBottom.dynamicScale = x.config.gap.dynamicScale;
  x.config.paddingLeft.dynamicScale = x.config.gap.dynamicScale;
  x.config.paddingRight.dynamicScale = x.config.gap.dynamicScale;
  x.config.marginTop.dynamicScale = x.config.margin.dynamicScale;
  x.config.marginBottom.dynamicScale = x.config.margin.dynamicScale;
  x.config.marginLeft.dynamicScale = x.config.margin.dynamicScale;
  x.config.marginRight.dynamicScale = x.config.margin.dynamicScale;
  x.config.height.dynamicScale = x.config.width.dynamicScale;
  x.config.minWidth.dynamicScale = x.config.width.dynamicScale;
  x.config.minHeight.dynamicScale = x.config.width.dynamicScale;
  x.config.maxWidth.dynamicScale = x.config.width.dynamicScale;
  x.config.maxHeight.dynamicScale = x.config.width.dynamicScale;
  return x;
}());

// src/components/box/box.tsx
var import_jsx_runtime = require("react/jsx-runtime");
var Box = (0, import_react.forwardRef)((_a, ref) => {
  var _b = _a, { className, style } = _b, props = __objRest(_b, ["className", "style"]);
  const { className: layoutClassName, style: layoutStyle, otherProps } = sprinkles(props);
  return /* @__PURE__ */ (0, import_jsx_runtime.jsx)(
    import_react_primitive.Primitive.div,
    __spreadValues({
      ref,
      className: (0, import_clsx.default)(layoutClassName, className),
      style: __spreadValues(__spreadValues({}, layoutStyle), style)
    }, otherProps)
  );
});
Box.displayName = "Box";

// src/components/flex/flex.tsx
var import_jsx_runtime2 = require("react/jsx-runtime");
var Flex = (0, import_react2.forwardRef)((props, ref) => {
  const [variantProps, otherProps] = createSplitProps()(props, ["inline"]);
  return /* @__PURE__ */ (0, import_jsx_runtime2.jsx)(Box, __spreadValues({ ref, display: variantProps.inline ? "inline-flex" : "flex" }, otherProps));
});
Flex.displayName = "Flex";
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  Flex
});
//# sourceMappingURL=index.cjs.map