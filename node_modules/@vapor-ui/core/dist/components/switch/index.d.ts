import * as react from 'react';
import { ComponentPropsWithoutRef } from 'react';
import { Primitive } from '@radix-ui/react-primitive';
import { Root as Root$1 } from '@radix-ui/react-switch';
import * as _vanilla_extract_recipes from '@vanilla-extract/recipes';
import { RecipeVariants } from '@vanilla-extract/recipes';

declare const root: _vanilla_extract_recipes.RuntimeFn<{
    disabled: {
        true: string;
    };
}>;
declare const control: _vanilla_extract_recipes.RuntimeFn<{
    size: {
        sm: string;
        md: string;
        lg: string;
    };
}>;
declare const label: _vanilla_extract_recipes.RuntimeFn<{
    visuallyHidden: {
        true: string;
    };
}>;
type RootVariants = NonNullable<RecipeVariants<typeof root>>;
type ControlVariants = NonNullable<RecipeVariants<typeof control>>;
type LabelVariants = NonNullable<RecipeVariants<typeof label>>;

type SwitchVariants = RootVariants & ControlVariants & LabelVariants;
type SwitchSharedProps = SwitchVariants & {
    checked?: boolean;
    onCheckedChange?: (checked: boolean) => void;
    defaultChecked?: boolean;
};
type SwitchRootPrimitiveProps = ComponentPropsWithoutRef<typeof Primitive.div>;
interface SwitchRootProps extends Omit<SwitchRootPrimitiveProps, keyof SwitchSharedProps>, SwitchSharedProps {
}
declare const Root: react.ForwardRefExoticComponent<SwitchRootProps & react.RefAttributes<HTMLDivElement>>;
type SwitchLabelPrimitiveProps = ComponentPropsWithoutRef<typeof Primitive.label>;
interface SwitchLabelProps extends SwitchLabelPrimitiveProps {
}
declare const Label: react.ForwardRefExoticComponent<SwitchLabelProps & react.RefAttributes<HTMLLabelElement>>;
type SwitchControlPrimitiveProps = ComponentPropsWithoutRef<typeof Root$1>;
interface SwitchControlProps extends Omit<SwitchControlPrimitiveProps, keyof SwitchSharedProps> {
}
declare const Control: react.ForwardRefExoticComponent<SwitchControlProps & react.RefAttributes<HTMLButtonElement>>;

declare const Switch: {
    Root: react.ForwardRefExoticComponent<SwitchRootProps & react.RefAttributes<HTMLDivElement>>;
    Label: react.ForwardRefExoticComponent<SwitchLabelProps & react.RefAttributes<HTMLLabelElement>>;
    Control: react.ForwardRefExoticComponent<SwitchControlProps & react.RefAttributes<HTMLButtonElement>>;
};

export { Switch, Control as SwitchControl, type SwitchControlProps, Label as SwitchLabel, type SwitchLabelProps, Root as SwitchRoot, type SwitchRootProps };
