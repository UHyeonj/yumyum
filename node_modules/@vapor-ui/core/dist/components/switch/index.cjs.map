{"version":3,"sources":["../../../src/components/switch/index.ts","../../../src/components/switch/switch.tsx","../../../src/libs/create-context.ts","../../../src/utils/create-split-props.ts","../../../src/components/switch/switch.css.ts"],"sourcesContent":["export * from './switch';\n","'use client';\n\nimport type { ComponentPropsWithoutRef } from 'react';\nimport { forwardRef, useId } from 'react';\n\nimport { Primitive } from '@radix-ui/react-primitive';\nimport { Thumb as RadixSwitchIndicator, Root as RadixSwitchRoot } from '@radix-ui/react-switch';\nimport clsx from 'clsx';\n\nimport { createContext } from '~/libs/create-context';\nimport { createSplitProps } from '~/utils/create-split-props';\n\nimport type { ControlVariants, LabelVariants, RootVariants } from './switch.css';\nimport * as styles from './switch.css';\n\ntype SwitchVariants = RootVariants & ControlVariants & LabelVariants;\n\ntype SwitchSharedProps = SwitchVariants & {\n    checked?: boolean;\n    onCheckedChange?: (checked: boolean) => void;\n    defaultChecked?: boolean;\n};\n\ntype SwitchContext = SwitchSharedProps & {\n    switchId?: string;\n};\n\nconst [SwitchProvider, useSwitchContext] = createContext<SwitchContext>({\n    name: 'Switch',\n    hookName: 'useSwitch',\n    providerName: 'SwitchProvider',\n});\n\n/* -------------------------------------------------------------------------------------------------\n * Switch.Root\n * -----------------------------------------------------------------------------------------------*/\n\ntype SwitchRootPrimitiveProps = ComponentPropsWithoutRef<typeof Primitive.div>;\ninterface SwitchRootProps\n    extends Omit<SwitchRootPrimitiveProps, keyof SwitchSharedProps>,\n        SwitchSharedProps {}\n\nconst Root = forwardRef<HTMLDivElement, SwitchRootProps>(({ className, ...props }, ref) => {\n    const switchId = useId();\n    const [switchProps, otherProps] = createSplitProps<SwitchSharedProps>()(props, [\n        'checked',\n        'onCheckedChange',\n        'defaultChecked',\n        'disabled',\n        'size',\n        'visuallyHidden',\n    ]);\n\n    const { disabled } = switchProps;\n\n    return (\n        <SwitchProvider value={{ switchId, ...switchProps }}>\n            <Primitive.div\n                ref={ref}\n                className={clsx(styles.root({ disabled }), className)}\n                {...otherProps}\n            />\n        </SwitchProvider>\n    );\n});\nRoot.displayName = 'Switch.Root';\n\n/* -------------------------------------------------------------------------------------------------\n * Switch.Label\n * -----------------------------------------------------------------------------------------------*/\n\ntype SwitchLabelPrimitiveProps = ComponentPropsWithoutRef<typeof Primitive.label>;\ninterface SwitchLabelProps extends SwitchLabelPrimitiveProps {}\n\nconst Label = forwardRef<HTMLLabelElement, SwitchLabelProps>(\n    ({ htmlFor, className, ...props }, ref) => {\n        const { switchId, visuallyHidden } = useSwitchContext();\n\n        return (\n            <Primitive.label\n                ref={ref}\n                htmlFor={htmlFor || switchId}\n                className={clsx(styles.label({ visuallyHidden }), className)}\n                {...props}\n            />\n        );\n    },\n);\nLabel.displayName = 'Switch.Label';\n\n/* -------------------------------------------------------------------------------------------------\n * Switch.Control\n * -----------------------------------------------------------------------------------------------*/\n\ntype SwitchControlPrimitiveProps = ComponentPropsWithoutRef<typeof RadixSwitchRoot>;\ninterface SwitchControlProps extends Omit<SwitchControlPrimitiveProps, keyof SwitchSharedProps> {}\n\nconst Control = forwardRef<HTMLButtonElement, SwitchControlProps>(\n    ({ id, className, ...props }, ref) => {\n        const { switchId, checked, onCheckedChange, defaultChecked, disabled, size } =\n            useSwitchContext();\n\n        return (\n            <RadixSwitchRoot\n                ref={ref}\n                id={id || switchId}\n                checked={checked}\n                defaultChecked={defaultChecked}\n                onCheckedChange={onCheckedChange}\n                disabled={disabled}\n                className={clsx(styles.control({ size }), className)}\n                {...props}\n            >\n                <RadixSwitchIndicator className={styles.indicator({ size })} />\n            </RadixSwitchRoot>\n        );\n    },\n);\nControl.displayName = 'Switch.Control';\n\n/* -----------------------------------------------------------------------------------------------*/\n\nexport { Root as SwitchRoot, Label as SwitchLabel, Control as SwitchControl };\nexport type { SwitchRootProps, SwitchLabelProps, SwitchControlProps };\n\nexport const Switch = { Root, Label, Control };\n","'use client';\n\nimport { createContext as createReactContext, useContext as useReactContext } from 'react';\n\nexport type CreateContextOptions<T> = {\n    strict?: boolean;\n    hookName?: string;\n    providerName?: string;\n    errorMessage?: string;\n    name?: string;\n    defaultValue?: T;\n};\n\nexport type CreateContextReturn<T> = [React.Provider<T>, () => T, React.Context<T>];\n\nconst getErrorMessage = (hook: string, provider: string) => {\n    return `${hook} returned \\`undefined\\`. Seems you forgot to wrap component within ${provider}`;\n};\n\nexport const createContext = <T>({\n    name,\n    strict = true,\n    hookName = 'useContext',\n    providerName = 'Provider',\n    errorMessage,\n    defaultValue,\n}: CreateContextOptions<T> = {}) => {\n    const Context = createReactContext<T | undefined>(defaultValue);\n\n    Context.displayName = name;\n\n    function useContext() {\n        const context = useReactContext(Context);\n\n        if (!context && strict) {\n            const error = new Error(errorMessage ?? getErrorMessage(hookName, providerName));\n            error.name = 'ContextError';\n            throw error;\n        }\n\n        return context;\n    }\n\n    return [Context.Provider, useContext, Context] as CreateContextReturn<T>;\n};\n","type EnsureKeys<\n    ExpectedKeys extends (keyof Target)[],\n    Target,\n> = keyof Target extends ExpectedKeys[number]\n    ? unknown\n    : `Missing required keys: ${Exclude<keyof Target, ExpectedKeys[number]> & string}`;\n\nexport const createSplitProps =\n    <Target>() =>\n    <Keys extends (keyof Target)[], Props extends Target = Target>(\n        props: Props,\n        keys: Keys & EnsureKeys<Keys, Target>,\n    ) =>\n        (keys as string[]).reduce<[Target, Omit<Props, Extract<(typeof keys)[number], string>>]>(\n            (previousValue, currentValue) => {\n                const [target, source] = previousValue;\n                const key = currentValue as keyof Target & keyof typeof source;\n                if (source[key] !== undefined) {\n                    target[key] = source[key];\n                }\n                delete source[key];\n                return [target, source];\n            },\n            [{} as Target, { ...props }],\n        );\n","import 'src/styles/global-var.css.ts.vanilla.css?source=QHByb3BlcnR5IC0tdmFwb3Itc2NhbGUtZmFjdG9yIHsKICBzeW50YXg6ICI8bnVtYmVyPiI7CiAgaW5oZXJpdHM6IHRydWU7CiAgaW5pdGlhbC12YWx1ZTogMTsKfQpAcHJvcGVydHkgLS12YXBvci1yYWRpdXMtZmFjdG9yIHsKICBzeW50YXg6ICI8bnVtYmVyPiI7CiAgaW5oZXJpdHM6IHRydWU7CiAgaW5pdGlhbC12YWx1ZTogMTsKfQ==';\nimport 'src/styles/mixins/interactions.css.ts.vanilla.css?source=#H4sIAAAAAAAAA61T0WrjMBB871cshUJyWEZJfXCnvvRPiixvYlFFa1aym9zRfz9sK44pvvoKh17sWe2MdjR6dvqCDJ1uiIWhU0MefXy6e17E4fcdQG59RNYmWvLh5WX3WNni/HM31ACEmJcFNdrYeBGso6Vps1Qgc/njaehoKNh+swJGp6PtsMff/66kVIkHYkyKhnxEHxXc338k1GUg10Yc8UiNAjl+OzzE6Sey9teWdGDYfZenAKhDak741FMSV8gKPHmcI4J1ZdugwPoa2cZU0+b1yNT6ShhyxAo6zRshrv46YlE6bV631xGG0QV26GOYq7zZKtYKdlI+jECN9ljHG/KZcQcybUi2URud9XjjXm0UnQ22dPh1gv3Xw1F8zvioauqQP0RhuiSjndmMFv+L4ha+wW67ptgjHf5Hyf2q5JLvJZ1FqHVFbwrksPbNGergNjID+ZANSdhmqVY054Ws9QOkPHrik3YrJymS9vylpLwPhOm5mLa0RpT4yyJv8iKTWb7P1owtxqucpruxKuBjqTcy6xfIfF+sUi0bNqdceHhjvWF70nxJEu9/AJIYWkIaBQAA';\nimport 'src/styles/mixins/visually-hidden.css.ts.vanilla.css?source=QGxheWVyIHZhcG9yLWNvbXBvbmVudDsKQGxheWVyIHZhcG9yLWNvbXBvbmVudCB7CiAgLnZpc3VhbGx5LWhpZGRlbl9fMXE3eHNzYTAgewogICAgcG9zaXRpb246IGFic29sdXRlOwogICAgbWFyZ2luOiAtMXB4OwogICAgYm9yZGVyOiAwOwogICAgcGFkZGluZzogMDsKICAgIHdpZHRoOiAxcHg7CiAgICBoZWlnaHQ6IDFweDsKICAgIG92ZXJmbG93OiBoaWRkZW47CiAgICB3aGl0ZS1zcGFjZTogbm93cmFwOwogICAgd29yZC13cmFwOiBub3JtYWw7CiAgICBjbGlwOiByZWN0KDAsIDAsIDAsIDApOwogIH0KfQ==';\nimport 'src/components/switch/switch.css.ts.vanilla.css?source=#H4sIAAAAAAAAA7VV24rbMBR8368QC4UUqiDn0hAvhX3s+z60UMpyIp3YwrIkJOXilv33YlvOpl3bdaAFG4w0mplzpJEfFVToyBGscZSb0hqNOjzcPfaOk593hMz9SQaePz8nBXduU7BmlBAhvVVQpURqJTXSvcLzQzMDSmaayoClTwlHHdC1ExnYlBzBzShtlbz8gdRb4EgTxt7XqJceySRKGgtchiolbL5ctJTWyJqf4hF18CnRRuMQzSrSWONlkEanxKGCII/Ycu2ME+heOboR6kDIg0/Jdrvd2ljkDniROXPQgnKjjPu9sGaIZg4quoqFEcIPztfA6HnQ5jcBAagPEPDTPc+RFyjuv0fzU3SvMNbJElw12Np11xMQQupscHvYYh2rOEkR8h6ckCVqL42+qjhHmeVhFLyIxH3mPk41t2aTza1vMbccOZSb/2Buc4u51Yg5/mdId8rwoqUODnQXgOZ7b1xJ2DzxnU2lKM9BZ3gF6A1Ewti7buJMfQ7CnFLC7Jms7Jkk9Uf9umwHM/aBxGe+6Kp8e5hPuQyDAeajybhYja4VBPw6qy0OtknEpX/fmWSznr4zHbhPEidLLm6K0chh2E+WXP6rcBRRsvkz9HGFyprMgc0rWmM+NxDKLl1WGOprvY7Qm3Bdr21gTy3q8g8hZPBq3BuH8cRp40pQccHe6NAUOChVI57qDryabBadxqurMV/a6l4D+/ILtThZ8IgHAAA=';\nimport { createRuntimeFn as _7a468 } from '@vanilla-extract/recipes/createRuntimeFn';\nexport var control = _7a468({defaultClassName:'interactions__13di4x95 interactions__13di4x91 interactions-scale_normal__13di4x96 interactions__13di4x93 switch__1kcrr7k4',variantClassNames:{size:{sm:'switch__1kcrr7k5',md:'switch__1kcrr7k6',lg:'switch__1kcrr7k7'}},defaultVariants:{size:'md'},compoundVariants:[]});\nexport var indicator = _7a468({defaultClassName:'switch__1kcrr7kg switch__1kcrr7kc',variantClassNames:{size:{sm:'switch__1kcrr7kd',md:'switch__1kcrr7ke',lg:'switch__1kcrr7kf'}},defaultVariants:{size:'md'},compoundVariants:[]});\nexport var label = _7a468({defaultClassName:'switch__1kcrr7kl switch__1kcrr7kk',variantClassNames:{visuallyHidden:{true:'visually-hidden__1q7xssa0'}},defaultVariants:{visuallyHidden:false},compoundVariants:[]});\nexport var root = _7a468({defaultClassName:'switch__1kcrr7k2 switch__1kcrr7k0',variantClassNames:{disabled:{true:'switch__1kcrr7k1'}},defaultVariants:{disabled:false},compoundVariants:[]});"],"mappings":"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","names":["import_react","createReactContext","useReactContext","_7a468","clsx","RadixSwitchRoot","RadixSwitchIndicator"]}