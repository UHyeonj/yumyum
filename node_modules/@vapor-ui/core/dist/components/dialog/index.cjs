'use client';
"use strict";
require("./index.css");
var __create = Object.create;
var __defProp = Object.defineProperty;
var __defProps = Object.defineProperties;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));
var __objRest = (source, exclude) => {
  var target = {};
  for (var prop in source)
    if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0)
      target[prop] = source[prop];
  if (source != null && __getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(source)) {
      if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop))
        target[prop] = source[prop];
    }
  return target;
};
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  // If the importer is in node compatibility mode or this is not an ESM
  // file that has been converted to a CommonJS file using a Babel-
  // compatible transform (i.e. "__esModule" has not been set), then set
  // "default" to the CommonJS "module.exports" for node compatibility.
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
  mod
));
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/components/dialog/index.ts
var dialog_exports = {};
__export(dialog_exports, {
  Dialog: () => Dialog,
  DialogBody: () => Body,
  DialogClose: () => Close,
  DialogCombinedContent: () => CombinedContent,
  DialogContent: () => Content,
  DialogDescription: () => Description,
  DialogFooter: () => Footer,
  DialogHeader: () => Header,
  DialogOverlay: () => Overlay,
  DialogPortal: () => Portal,
  DialogRoot: () => Root,
  DialogTitle: () => Title,
  DialogTrigger: () => Trigger
});
module.exports = __toCommonJS(dialog_exports);

// src/components/dialog/dialog.tsx
var import_react2 = require("react");
var import_react_dialog = require("@radix-ui/react-dialog");
var import_react_primitive = require("@radix-ui/react-primitive");
var import_clsx = __toESM(require("clsx"));

// src/libs/create-context.ts
var import_react = require("react");
var getErrorMessage = (hook, provider) => {
  return `${hook} returned \`undefined\`. Seems you forgot to wrap component within ${provider}`;
};
var createContext = ({
  name,
  strict = true,
  hookName = "useContext",
  providerName = "Provider",
  errorMessage,
  defaultValue
} = {}) => {
  const Context = (0, import_react.createContext)(defaultValue);
  Context.displayName = name;
  function useContext() {
    const context = (0, import_react.useContext)(Context);
    if (!context && strict) {
      const error = new Error(errorMessage != null ? errorMessage : getErrorMessage(hookName, providerName));
      error.name = "ContextError";
      throw error;
    }
    return context;
  }
  return [Context.Provider, useContext, Context];
};

// src/components/dialog/dialog.css.ts
var import_createRuntimeFn = require("@vanilla-extract/recipes/createRuntimeFn");
var body = "dialog__dt887tg";
var content = (0, import_createRuntimeFn.createRuntimeFn)({ defaultClassName: "dialog__dt887t9 dialog__dt887t5", variantClassNames: { size: { md: "dialog__dt887t6", lg: "dialog__dt887t7", xl: "dialog__dt887t8" } }, defaultVariants: { size: "md" }, compoundVariants: [] });
var description = "dialog__dt887te";
var footer = "dialog__dt887th";
var header = "dialog__dt887tf";
var overlay = "dialog__dt887t2";
var title = "dialog__dt887td";

// src/components/dialog/dialog.tsx
var import_jsx_runtime = require("react/jsx-runtime");
var [DialogRoot, useDialogContext] = createContext({
  name: "Dialog",
  hookName: "useDialogContext",
  providerName: "DialogProvider"
});
var Root = (_a) => {
  var _b = _a, {
    size,
    closeOnClickOverlay,
    closeOnEscape,
    children
  } = _b, props = __objRest(_b, [
    "size",
    "closeOnClickOverlay",
    "closeOnEscape",
    "children"
  ]);
  return /* @__PURE__ */ (0, import_jsx_runtime.jsx)(import_react_dialog.Root, __spreadProps(__spreadValues({}, props), { children: /* @__PURE__ */ (0, import_jsx_runtime.jsx)(DialogRoot, { value: { size, closeOnClickOverlay, closeOnEscape }, children }) }));
};
var Portal = import_react_dialog.Portal;
Portal.displayName = "Dialog.Portal";
var Overlay = (0, import_react2.forwardRef)((_a, ref) => {
  var _b = _a, { className } = _b, props = __objRest(_b, ["className"]);
  return /* @__PURE__ */ (0, import_jsx_runtime.jsx)(import_react_dialog.Overlay, __spreadValues({ ref, className: (0, import_clsx.default)(overlay, className) }, props));
});
Overlay.displayName = "Dialog.Overlay";
var Content = (0, import_react2.forwardRef)(
  (_a, ref) => {
    var _b = _a, { onPointerDownOutside, onEscapeKeyDown, className } = _b, props = __objRest(_b, ["onPointerDownOutside", "onEscapeKeyDown", "className"]);
    const { size, closeOnClickOverlay = true, closeOnEscape = true } = useDialogContext();
    const handlePointerDownOutside = (event) => {
      if (closeOnClickOverlay) return;
      event.preventDefault();
      onPointerDownOutside == null ? void 0 : onPointerDownOutside(event);
    };
    const handleEscapeKeyDown = (event) => {
      if (closeOnEscape) return;
      event.preventDefault();
      onEscapeKeyDown == null ? void 0 : onEscapeKeyDown(event);
    };
    return /* @__PURE__ */ (0, import_jsx_runtime.jsx)(
      import_react_dialog.Content,
      __spreadValues({
        ref,
        className: (0, import_clsx.default)(content({ size }), className),
        onPointerDownOutside: handlePointerDownOutside,
        onEscapeKeyDown: handleEscapeKeyDown
      }, props)
    );
  }
);
Content.displayName = "Dialog.Content";
var CombinedContent = (0, import_react2.forwardRef)((props, ref) => {
  return /* @__PURE__ */ (0, import_jsx_runtime.jsxs)(import_react_dialog.Portal, { children: [
    /* @__PURE__ */ (0, import_jsx_runtime.jsx)(Overlay, {}),
    /* @__PURE__ */ (0, import_jsx_runtime.jsx)(Content, __spreadValues({ ref }, props))
  ] });
});
CombinedContent.displayName = "Dialog.CombinedContent";
var Trigger = (0, import_react2.forwardRef)((props, ref) => {
  return /* @__PURE__ */ (0, import_jsx_runtime.jsx)(import_react_dialog.Trigger, __spreadValues({ ref }, props));
});
Trigger.displayName = "Dialog.Trigger";
var Close = (0, import_react2.forwardRef)((props, ref) => {
  return /* @__PURE__ */ (0, import_jsx_runtime.jsx)(import_react_dialog.Close, __spreadValues({ ref }, props));
});
Close.displayName = "Dialog.Close";
var Title = (0, import_react2.forwardRef)((_a, ref) => {
  var _b = _a, { className } = _b, props = __objRest(_b, ["className"]);
  return /* @__PURE__ */ (0, import_jsx_runtime.jsx)(import_react_dialog.Title, __spreadValues({ ref, className: (0, import_clsx.default)(title, className) }, props));
});
Title.displayName = "Dialog.Title";
var Description = (0, import_react2.forwardRef)(
  (_a, ref) => {
    var _b = _a, { className } = _b, props = __objRest(_b, ["className"]);
    return /* @__PURE__ */ (0, import_jsx_runtime.jsx)(
      import_react_dialog.Description,
      __spreadValues({
        ref,
        className: (0, import_clsx.default)(description, className)
      }, props)
    );
  }
);
Description.displayName = "Dialog.Description";
var Header = (0, import_react2.forwardRef)((_a, ref) => {
  var _b = _a, { className } = _b, props = __objRest(_b, ["className"]);
  return /* @__PURE__ */ (0, import_jsx_runtime.jsx)(import_react_primitive.Primitive.div, __spreadValues({ ref, className: (0, import_clsx.default)(header, className) }, props));
});
Header.displayName = "Dialog.Header";
var Body = (0, import_react2.forwardRef)((_a, ref) => {
  var _b = _a, { className } = _b, props = __objRest(_b, ["className"]);
  return /* @__PURE__ */ (0, import_jsx_runtime.jsx)(import_react_primitive.Primitive.div, __spreadValues({ ref, className: (0, import_clsx.default)(body, className) }, props));
});
Body.displayName = "Dialog.Body";
var Footer = (0, import_react2.forwardRef)((_a, ref) => {
  var _b = _a, { className } = _b, props = __objRest(_b, ["className"]);
  return /* @__PURE__ */ (0, import_jsx_runtime.jsx)(import_react_primitive.Primitive.div, __spreadValues({ ref, className: (0, import_clsx.default)(footer, className) }, props));
});
Footer.displayName = "Dialog.Footer";
var Dialog = {
  Root,
  Overlay,
  Content,
  CombinedContent,
  Portal,
  Trigger,
  Close,
  Title,
  Description,
  Header,
  Body,
  Footer
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  Dialog,
  DialogBody,
  DialogClose,
  DialogCombinedContent,
  DialogContent,
  DialogDescription,
  DialogFooter,
  DialogHeader,
  DialogOverlay,
  DialogPortal,
  DialogRoot,
  DialogTitle,
  DialogTrigger
});
//# sourceMappingURL=index.cjs.map