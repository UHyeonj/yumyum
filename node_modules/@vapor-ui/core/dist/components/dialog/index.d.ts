import * as react from 'react';
import { ComponentPropsWithoutRef } from 'react';
import * as _radix_ui_react_dialog from '@radix-ui/react-dialog';
import { Root as Root$1, Overlay as Overlay$1, Content as Content$1, Trigger as Trigger$1, Close as Close$1, Title as Title$1, Description as Description$1, Portal as Portal$1 } from '@radix-ui/react-dialog';
import * as react_jsx_runtime from 'react/jsx-runtime';
import { Primitive } from '@radix-ui/react-primitive';
import * as _vanilla_extract_recipes from '@vanilla-extract/recipes';
import { RecipeVariants } from '@vanilla-extract/recipes';

declare const content: _vanilla_extract_recipes.RuntimeFn<{
    size: {
        md: string;
        lg: string;
        xl: string;
    };
}>;
type DialogContentVariants = RecipeVariants<typeof content>;

type DialogSharedProps = DialogContentVariants & {
    closeOnClickOverlay?: boolean;
    closeOnEscape?: boolean;
};
type DialogPrimitiveProps = ComponentPropsWithoutRef<typeof Root$1>;
interface DialogRootProps extends DialogPrimitiveProps, DialogSharedProps {
}
declare const Root: ({ size, closeOnClickOverlay, closeOnEscape, children, ...props }: DialogRootProps) => react_jsx_runtime.JSX.Element;
interface DialogPortalProps extends ComponentPropsWithoutRef<typeof Portal$1> {
}
declare const Portal: react.FC<_radix_ui_react_dialog.DialogPortalProps>;
interface DialogOverlayProps extends ComponentPropsWithoutRef<typeof Overlay$1> {
}
declare const Overlay: react.ForwardRefExoticComponent<DialogOverlayProps & react.RefAttributes<HTMLDivElement>>;
interface DialogContentProps extends ComponentPropsWithoutRef<typeof Content$1> {
}
declare const Content: react.ForwardRefExoticComponent<DialogContentProps & react.RefAttributes<HTMLDivElement>>;
interface DialogCombinedContentProps extends DialogContentProps {
}
declare const CombinedContent: react.ForwardRefExoticComponent<DialogCombinedContentProps & react.RefAttributes<HTMLDivElement>>;
interface DialogTriggerProps extends ComponentPropsWithoutRef<typeof Trigger$1> {
}
declare const Trigger: react.ForwardRefExoticComponent<DialogTriggerProps & react.RefAttributes<HTMLButtonElement>>;
interface DialogCloseProps extends ComponentPropsWithoutRef<typeof Close$1> {
}
declare const Close: react.ForwardRefExoticComponent<DialogCloseProps & react.RefAttributes<HTMLButtonElement>>;
interface DialogTitleProps extends ComponentPropsWithoutRef<typeof Title$1> {
}
declare const Title: react.ForwardRefExoticComponent<DialogTitleProps & react.RefAttributes<HTMLHeadingElement>>;
interface DialogDescriptionProps extends ComponentPropsWithoutRef<typeof Description$1> {
}
declare const Description: react.ForwardRefExoticComponent<DialogDescriptionProps & react.RefAttributes<HTMLParagraphElement>>;
interface DialogHeaderProps extends ComponentPropsWithoutRef<typeof Primitive.div> {
}
declare const Header: react.ForwardRefExoticComponent<DialogHeaderProps & react.RefAttributes<HTMLDivElement>>;
interface DialogBodyProps extends ComponentPropsWithoutRef<typeof Primitive.div> {
}
declare const Body: react.ForwardRefExoticComponent<DialogBodyProps & react.RefAttributes<HTMLDivElement>>;
interface DialogFooterProps extends ComponentPropsWithoutRef<typeof Primitive.div> {
}
declare const Footer: react.ForwardRefExoticComponent<DialogFooterProps & react.RefAttributes<HTMLDivElement>>;

declare const Dialog: {
    Root: ({ size, closeOnClickOverlay, closeOnEscape, children, ...props }: DialogRootProps) => react_jsx_runtime.JSX.Element;
    Overlay: react.ForwardRefExoticComponent<DialogOverlayProps & react.RefAttributes<HTMLDivElement>>;
    Content: react.ForwardRefExoticComponent<DialogContentProps & react.RefAttributes<HTMLDivElement>>;
    CombinedContent: react.ForwardRefExoticComponent<DialogCombinedContentProps & react.RefAttributes<HTMLDivElement>>;
    Portal: react.FC<_radix_ui_react_dialog.DialogPortalProps>;
    Trigger: react.ForwardRefExoticComponent<DialogTriggerProps & react.RefAttributes<HTMLButtonElement>>;
    Close: react.ForwardRefExoticComponent<DialogCloseProps & react.RefAttributes<HTMLButtonElement>>;
    Title: react.ForwardRefExoticComponent<DialogTitleProps & react.RefAttributes<HTMLHeadingElement>>;
    Description: react.ForwardRefExoticComponent<DialogDescriptionProps & react.RefAttributes<HTMLParagraphElement>>;
    Header: react.ForwardRefExoticComponent<DialogHeaderProps & react.RefAttributes<HTMLDivElement>>;
    Body: react.ForwardRefExoticComponent<DialogBodyProps & react.RefAttributes<HTMLDivElement>>;
    Footer: react.ForwardRefExoticComponent<DialogFooterProps & react.RefAttributes<HTMLDivElement>>;
};

export { Dialog, Body as DialogBody, type DialogBodyProps, Close as DialogClose, type DialogCloseProps, CombinedContent as DialogCombinedContent, type DialogCombinedContentProps, Content as DialogContent, type DialogContentProps, Description as DialogDescription, type DialogDescriptionProps, Footer as DialogFooter, type DialogFooterProps, Header as DialogHeader, type DialogHeaderProps, Overlay as DialogOverlay, type DialogOverlayProps, Portal as DialogPortal, type DialogPortalProps, Root as DialogRoot, type DialogRootProps, Title as DialogTitle, type DialogTitleProps, Trigger as DialogTrigger, type DialogTriggerProps };
