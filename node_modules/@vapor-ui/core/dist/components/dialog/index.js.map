{"version":3,"sources":["../../../src/components/dialog/dialog.tsx","../../../src/libs/create-context.ts","../../../src/components/dialog/dialog.css.ts"],"sourcesContent":["'use client';\n\nimport type { ComponentPropsWithoutRef } from 'react';\nimport { forwardRef } from 'react';\n\nimport {\n    Close as RadixClose,\n    Content as RadixContent,\n    Description as RadixDescription,\n    Root as RadixDialog,\n    Overlay as RadixOverlay,\n    Portal as RadixPortal,\n    Title as RadixTitle,\n    Trigger as RadixTrigger,\n} from '@radix-ui/react-dialog';\nimport { Primitive } from '@radix-ui/react-primitive';\nimport clsx from 'clsx';\n\nimport { createContext } from '~/libs/create-context';\n\nimport * as styles from './dialog.css';\nimport type { DialogContentVariants } from './dialog.css';\n\ntype DialogSharedProps = DialogContentVariants & {\n    closeOnClickOverlay?: boolean;\n    closeOnEscape?: boolean;\n};\ntype DialogContext = DialogSharedProps;\n\nconst [DialogRoot, useDialogContext] = createContext<DialogContext>({\n    name: 'Dialog',\n    hookName: 'useDialogContext',\n    providerName: 'DialogProvider',\n});\n\n/* -------------------------------------------------------------------------------------------------\n * Dialog\n * -----------------------------------------------------------------------------------------------*/\n\ntype DialogPrimitiveProps = ComponentPropsWithoutRef<typeof RadixDialog>;\ninterface DialogRootProps extends DialogPrimitiveProps, DialogSharedProps {}\n\nconst Root = ({\n    size,\n    closeOnClickOverlay,\n    closeOnEscape,\n    children,\n    ...props\n}: DialogRootProps) => {\n    return (\n        <RadixDialog {...props}>\n            <DialogRoot value={{ size, closeOnClickOverlay, closeOnEscape }}>{children}</DialogRoot>\n        </RadixDialog>\n    );\n};\n\n/* -------------------------------------------------------------------------------------------------\n * Dialog.Portal\n * -----------------------------------------------------------------------------------------------*/\n\ninterface DialogPortalProps extends ComponentPropsWithoutRef<typeof RadixPortal> {}\n\nconst Portal = RadixPortal;\nPortal.displayName = 'Dialog.Portal';\n\n/* -------------------------------------------------------------------------------------------------\n * Dialog.Overlay\n * -----------------------------------------------------------------------------------------------*/\n\ninterface DialogOverlayProps extends ComponentPropsWithoutRef<typeof RadixOverlay> {}\n\nconst Overlay = forwardRef<HTMLDivElement, DialogOverlayProps>(({ className, ...props }, ref) => {\n    return <RadixOverlay ref={ref} className={clsx(styles.overlay, className)} {...props} />;\n});\nOverlay.displayName = 'Dialog.Overlay';\n\n/* -------------------------------------------------------------------------------------------------\n * Dialog.Content\n * -----------------------------------------------------------------------------------------------*/\n\ntype PointerDownOutsideEvent = CustomEvent<{ originalEvent: PointerEvent }>;\ninterface DialogContentProps extends ComponentPropsWithoutRef<typeof RadixContent> {}\n\nconst Content = forwardRef<HTMLDivElement, DialogContentProps>(\n    ({ onPointerDownOutside, onEscapeKeyDown, className, ...props }, ref) => {\n        const { size, closeOnClickOverlay = true, closeOnEscape = true } = useDialogContext();\n\n        const handlePointerDownOutside = (event: PointerDownOutsideEvent) => {\n            if (closeOnClickOverlay) return;\n            event.preventDefault();\n            onPointerDownOutside?.(event);\n        };\n\n        const handleEscapeKeyDown = (event: KeyboardEvent) => {\n            if (closeOnEscape) return;\n            event.preventDefault();\n            onEscapeKeyDown?.(event);\n        };\n\n        return (\n            <RadixContent\n                ref={ref}\n                className={clsx(styles.content({ size }), className)}\n                onPointerDownOutside={handlePointerDownOutside}\n                onEscapeKeyDown={handleEscapeKeyDown}\n                {...props}\n            />\n        );\n    },\n);\nContent.displayName = 'Dialog.Content';\n\n/* -------------------------------------------------------------------------------------------------\n * Dialog.CombinedContent\n * -----------------------------------------------------------------------------------------------*/\n\ninterface DialogCombinedContentProps extends DialogContentProps {}\n\nconst CombinedContent = forwardRef<HTMLDivElement, DialogCombinedContentProps>((props, ref) => {\n    return (\n        <RadixPortal>\n            <Overlay />\n            <Content ref={ref} {...props} />\n        </RadixPortal>\n    );\n});\nCombinedContent.displayName = 'Dialog.CombinedContent';\n\n/* -------------------------------------------------------------------------------------------------\n * Dialog.Trigger\n * -----------------------------------------------------------------------------------------------*/\n\ninterface DialogTriggerProps extends ComponentPropsWithoutRef<typeof RadixTrigger> {}\n\nconst Trigger = forwardRef<HTMLButtonElement, DialogTriggerProps>((props, ref) => {\n    return <RadixTrigger ref={ref} {...props} />;\n});\nTrigger.displayName = 'Dialog.Trigger';\n\n/* -------------------------------------------------------------------------------------------------\n * Dialog.Close\n * -----------------------------------------------------------------------------------------------*/\n\ninterface DialogCloseProps extends ComponentPropsWithoutRef<typeof RadixClose> {}\n\nconst Close = forwardRef<HTMLButtonElement, DialogCloseProps>((props, ref) => {\n    return <RadixClose ref={ref} {...props} />;\n});\nClose.displayName = 'Dialog.Close';\n\n/* -------------------------------------------------------------------------------------------------\n * Dialog.Title\n * -----------------------------------------------------------------------------------------------*/\n\ninterface DialogTitleProps extends ComponentPropsWithoutRef<typeof RadixTitle> {}\n\nconst Title = forwardRef<HTMLHeadingElement, DialogTitleProps>(({ className, ...props }, ref) => {\n    return <RadixTitle ref={ref} className={clsx(styles.title, className)} {...props} />;\n});\nTitle.displayName = 'Dialog.Title';\n\n/* -------------------------------------------------------------------------------------------------\n * Dialog.Description\n * -----------------------------------------------------------------------------------------------*/\n\ninterface DialogDescriptionProps extends ComponentPropsWithoutRef<typeof RadixDescription> {}\n\nconst Description = forwardRef<HTMLParagraphElement, DialogDescriptionProps>(\n    ({ className, ...props }, ref) => {\n        return (\n            <RadixDescription\n                ref={ref}\n                className={clsx(styles.description, className)}\n                {...props}\n            />\n        );\n    },\n);\nDescription.displayName = 'Dialog.Description';\n\n/* -------------------------------------------------------------------------------------------------\n * Dialog.Header\n * -----------------------------------------------------------------------------------------------*/\n\ninterface DialogHeaderProps extends ComponentPropsWithoutRef<typeof Primitive.div> {}\n\nconst Header = forwardRef<HTMLDivElement, DialogHeaderProps>(({ className, ...props }, ref) => {\n    return <Primitive.div ref={ref} className={clsx(styles.header, className)} {...props} />;\n});\nHeader.displayName = 'Dialog.Header';\n\n/* -------------------------------------------------------------------------------------------------\n * Dialog.Body\n * -----------------------------------------------------------------------------------------------*/\n\ninterface DialogBodyProps extends ComponentPropsWithoutRef<typeof Primitive.div> {}\n\nconst Body = forwardRef<HTMLDivElement, DialogBodyProps>(({ className, ...props }, ref) => {\n    return <Primitive.div ref={ref} className={clsx(styles.body, className)} {...props} />;\n});\nBody.displayName = 'Dialog.Body';\n\n/* -------------------------------------------------------------------------------------------------\n * Dialog.Footer\n * -----------------------------------------------------------------------------------------------*/\n\ninterface DialogFooterProps extends ComponentPropsWithoutRef<typeof Primitive.div> {}\n\nconst Footer = forwardRef<HTMLDivElement, DialogFooterProps>(({ className, ...props }, ref) => {\n    return <Primitive.div ref={ref} className={clsx(styles.footer, className)} {...props} />;\n});\nFooter.displayName = 'Dialog.Footer';\n\n/* -----------------------------------------------------------------------------------------------*/\n\nexport {\n    Root as DialogRoot,\n    Portal as DialogPortal,\n    Overlay as DialogOverlay,\n    Content as DialogContent,\n    CombinedContent as DialogCombinedContent,\n    Trigger as DialogTrigger,\n    Close as DialogClose,\n    Title as DialogTitle,\n    Description as DialogDescription,\n    Header as DialogHeader,\n    Body as DialogBody,\n    Footer as DialogFooter,\n};\n\nexport type {\n    DialogRootProps,\n    DialogPortalProps,\n    DialogOverlayProps,\n    DialogContentProps,\n    DialogCombinedContentProps,\n    DialogTriggerProps,\n    DialogCloseProps,\n    DialogTitleProps,\n    DialogDescriptionProps,\n    DialogHeaderProps,\n    DialogBodyProps,\n    DialogFooterProps,\n};\n\nexport const Dialog = {\n    Root,\n    Overlay,\n    Content,\n    CombinedContent,\n    Portal,\n    Trigger,\n    Close,\n    Title,\n    Description,\n    Header,\n    Body,\n    Footer,\n};\n","'use client';\n\nimport { createContext as createReactContext, useContext as useReactContext } from 'react';\n\nexport type CreateContextOptions<T> = {\n    strict?: boolean;\n    hookName?: string;\n    providerName?: string;\n    errorMessage?: string;\n    name?: string;\n    defaultValue?: T;\n};\n\nexport type CreateContextReturn<T> = [React.Provider<T>, () => T, React.Context<T>];\n\nconst getErrorMessage = (hook: string, provider: string) => {\n    return `${hook} returned \\`undefined\\`. Seems you forgot to wrap component within ${provider}`;\n};\n\nexport const createContext = <T>({\n    name,\n    strict = true,\n    hookName = 'useContext',\n    providerName = 'Provider',\n    errorMessage,\n    defaultValue,\n}: CreateContextOptions<T> = {}) => {\n    const Context = createReactContext<T | undefined>(defaultValue);\n\n    Context.displayName = name;\n\n    function useContext() {\n        const context = useReactContext(Context);\n\n        if (!context && strict) {\n            const error = new Error(errorMessage ?? getErrorMessage(hookName, providerName));\n            error.name = 'ContextError';\n            throw error;\n        }\n\n        return context;\n    }\n\n    return [Context.Provider, useContext, Context] as CreateContextReturn<T>;\n};\n","import 'src/styles/global-var.css.ts.vanilla.css?source=QHByb3BlcnR5IC0tdmFwb3Itc2NhbGUtZmFjdG9yIHsKICBzeW50YXg6ICI8bnVtYmVyPiI7CiAgaW5oZXJpdHM6IHRydWU7CiAgaW5pdGlhbC12YWx1ZTogMTsKfQpAcHJvcGVydHkgLS12YXBvci1yYWRpdXMtZmFjdG9yIHsKICBzeW50YXg6ICI8bnVtYmVyPiI7CiAgaW5oZXJpdHM6IHRydWU7CiAgaW5pdGlhbC12YWx1ZTogMTsKfQ==';\nimport 'src/components/dialog/dialog.css.ts.vanilla.css?source=#H4sIAAAAAAAAA81VUW/aMBB+51f4pSqVcOSEprBUk/q45/VhD9NUmfgSLBxfZJtSOvHfJycBFoSBsk2ahELi++7uu+/O9tMC1oXhFVgiJFdYvrwIN51OHCM/B4Swm+aPEKx5Lt06I+xxQMhmQEjMjhijcdLaN4OnUOQ4FHnnHAh+NvK4H9kZrm2BpsraV8UdDGnKbkbEP++IzbmCIYs+Pdw9nq/ywnDxYaz4LO/7q3iHEl1D+oQGm8GT4msw5JXXaGiOVY0atHsMrDeJo36BScemRiudRJ2RQr6BaBNKbcF16TrCHaijQliUWJIvZzKnM3iXYIYsiifpiEXTqX+Ok1EcbeWY8XxRGlxqQXNUaDLyys2Q0i1NhYbOFM8Xd1u5Dsl+F9xxah138PkWa9C3Pzr+XMuKt9wOd0vDEbgFiktHCjQrboS9KEWu0II4nyT+WJL0lOgO64yk7Kb9UlC43z6FtLXi64wUCt7aJf9GhTSQt6FyVMtKtzauZKmpdFDZ1sUXZlzXDjQCDDVcyKXt98LKd6Ct/WtjpmPGtl3EN2rnXOAqI4zEBiqS+AcjppzxIRuR7hclH+n7HqPRVFxRJcu5AxOahfSKWRhfOq9nG3jVlNz/rfQPXaaVFG6ekXEcJamBKoCe9NEpC0OnfejkdGDRoZXUQOfg+9VvrVvXWBpez9fUY740EJrsRkmBc2Co9YeJLsO+Dey5RdF45x4cpgIN9IapcyhQu2a2g6k84tkP/55k47Q6XZ3HfGurm3SOR/SC6/Rik/T/12tP8oN63Yf1Kjq9jhx6vYMtB+3AtIaS10eOMq8Y0DjdKlFzIbw2M4X5YnfBbVel9uoHw+yPwm6b+Eu9XTjW1MZTyAq0lahPzUe5vRb+ETt8BVMoXNF1RvjSYYDG/ArZDygHuO031Z8WsxlsfgHIP3j/IAsAAA==';\nimport { createRuntimeFn as _7a468 } from '@vanilla-extract/recipes/createRuntimeFn';\nexport var body = 'dialog__dt887tg';\nexport var content = _7a468({defaultClassName:'dialog__dt887t9 dialog__dt887t5',variantClassNames:{size:{md:'dialog__dt887t6',lg:'dialog__dt887t7',xl:'dialog__dt887t8'}},defaultVariants:{size:'md'},compoundVariants:[]});\nexport var description = 'dialog__dt887te';\nexport var footer = 'dialog__dt887th';\nexport var header = 'dialog__dt887tf';\nexport var overlay = 'dialog__dt887t2';\nexport var scaleDown = 'dialog__dt887t4';\nexport var scaleUp = 'dialog__dt887t3';\nexport var title = 'dialog__dt887td';"],"mappings":"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","names":[]}