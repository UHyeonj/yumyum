{"version":3,"sources":["../../../src/components/badge/badge.tsx","../../../src/utils/create-split-props.ts","../../../src/components/badge/badge.css.ts"],"sourcesContent":["'use client';\n\nimport type { ComponentPropsWithoutRef } from 'react';\nimport { forwardRef } from 'react';\n\nimport { Primitive } from '@radix-ui/react-primitive';\nimport clsx from 'clsx';\n\nimport { createSplitProps } from '~/utils/create-split-props';\n\nimport type { BadgeVariants } from './badge.css';\nimport * as styles from './badge.css';\n\ntype BadgePrimitiveProps = Omit<ComponentPropsWithoutRef<typeof Primitive.span>, 'color'>;\ninterface BadgeProps extends BadgePrimitiveProps, BadgeVariants {}\n\nconst Badge = forwardRef<HTMLSpanElement, BadgeProps>(({ className, children, ...props }, ref) => {\n    const [variantsProps, otherProps] = createSplitProps<BadgeVariants>()(props, [\n        'color',\n        'size',\n        'shape',\n    ]);\n\n    return (\n        <Primitive.span\n            ref={ref}\n            className={clsx(styles.root(variantsProps), className)}\n            {...otherProps}\n        >\n            {children}\n        </Primitive.span>\n    );\n});\nBadge.displayName = 'Badge';\n\nexport { Badge };\nexport type { BadgeProps };\n","type EnsureKeys<\n    ExpectedKeys extends (keyof Target)[],\n    Target,\n> = keyof Target extends ExpectedKeys[number]\n    ? unknown\n    : `Missing required keys: ${Exclude<keyof Target, ExpectedKeys[number]> & string}`;\n\nexport const createSplitProps =\n    <Target>() =>\n    <Keys extends (keyof Target)[], Props extends Target = Target>(\n        props: Props,\n        keys: Keys & EnsureKeys<Keys, Target>,\n    ) =>\n        (keys as string[]).reduce<[Target, Omit<Props, Extract<(typeof keys)[number], string>>]>(\n            (previousValue, currentValue) => {\n                const [target, source] = previousValue;\n                const key = currentValue as keyof Target & keyof typeof source;\n                if (source[key] !== undefined) {\n                    target[key] = source[key];\n                }\n                delete source[key];\n                return [target, source];\n            },\n            [{} as Target, { ...props }],\n        );\n","import 'src/styles/global-var.css.ts.vanilla.css?source=QHByb3BlcnR5IC0tdmFwb3Itc2NhbGUtZmFjdG9yIHsKICBzeW50YXg6ICI8bnVtYmVyPiI7CiAgaW5oZXJpdHM6IHRydWU7CiAgaW5pdGlhbC12YWx1ZTogMTsKfQpAcHJvcGVydHkgLS12YXBvci1yYWRpdXMtZmFjdG9yIHsKICBzeW50YXg6ICI8bnVtYmVyPiI7CiAgaW5oZXJpdHM6IHRydWU7CiAgaW5pdGlhbC12YWx1ZTogMTsKfQ==';\nimport 'src/components/badge/badge.css.ts.vanilla.css?source=#H4sIAAAAAAAAA+WUMW/bMBCF9/wKjjEQBpRtxZWzZOycDB2Dk3imicgkcaSTqEX+eyFKclpEqixDW1fee+8+PhF6KKFCYq/gLPHCHpw1aML91UPvOft1xdhtDlLh83OyXiWbYi3iIWNSe1dCtWXalNog35X4fh8nUGpluA548FtWoAlI9eDja1bSZhW2tLRlr0DXnHcMpSW+s4SK7NFI7kgfgCougV6QFs2qHIqXdt5mkMrh+mvQH0JSeRe2uGHiNrlbDOAtJ+DttQnzsNVJI2CrCWASjEKaB63JGoFbT4Dzx6JA7+eha8NG8NIJeG9ARhs1D14bNoJ3NwGvsCYQ+JneXZc2ArhpAXNLEokTSH30f4N6/RN5M3+MY74SYijvW39elmWZex/wZK1HgevZ7B0UyMUybQtxIKU2asvEoHbTafeo1T70hEp9QOO1NXyZilYc/3t9jlA5qwjcvuK15nuUcPFpxBCQ4vIINuSNsqdGxYXo7DtrQqQadNaKpxr7c2c0vf0bttb8aGDT4S8G57R/2jvefnK62Bntr8R/3n5+Tvub899+kk5of31x+yeii9pPLmr/tPPi9j9+A6EFgmgwCQAA';\nimport { createRuntimeFn as _7a468 } from '@vanilla-extract/recipes/createRuntimeFn';\nexport var root = _7a468({defaultClassName:'badge__14317c4c badge__14317c40',variantClassNames:{color:{primary:'badge__14317c41',hint:'badge__14317c42',danger:'badge__14317c43',success:'badge__14317c44',warning:'badge__14317c45',contrast:'badge__14317c46'},shape:{square:'badge__14317c47',pill:'badge__14317c48'},size:{sm:'badge__14317c49',md:'badge__14317c4a',lg:'badge__14317c4b'}},defaultVariants:{color:'primary',size:'md',shape:'square'},compoundVariants:[]});"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGA,SAAS,kBAAkB;AAE3B,SAAS,iBAAiB;AAC1B,OAAO,UAAU;;;ACCV,IAAM,mBACT,MACA,CACI,OACA,SAEC,KAAkB;AAAA,EACf,CAAC,eAAe,iBAAiB;AAC7B,UAAM,CAAC,QAAQ,MAAM,IAAI;AACzB,UAAM,MAAM;AACZ,QAAI,OAAO,GAAG,MAAM,QAAW;AAC3B,aAAO,GAAG,IAAI,OAAO,GAAG;AAAA,IAC5B;AACA,WAAO,OAAO,GAAG;AACjB,WAAO,CAAC,QAAQ,MAAM;AAAA,EAC1B;AAAA,EACA,CAAC,CAAC,GAAa,mBAAK,MAAO;AAC/B;;;ACtBR,SAAS,mBAAmB,cAAc;AACnC,IAAI,OAAO,OAAO,EAAC,kBAAiB,mCAAkC,mBAAkB,EAAC,OAAM,EAAC,SAAQ,mBAAkB,MAAK,mBAAkB,QAAO,mBAAkB,SAAQ,mBAAkB,SAAQ,mBAAkB,UAAS,kBAAiB,GAAE,OAAM,EAAC,QAAO,mBAAkB,MAAK,kBAAiB,GAAE,MAAK,EAAC,IAAG,mBAAkB,IAAG,mBAAkB,IAAG,kBAAiB,EAAC,GAAE,iBAAgB,EAAC,OAAM,WAAU,MAAK,MAAK,OAAM,SAAQ,GAAE,kBAAiB,CAAC,EAAC,CAAC;;;AFqBvc;AARR,IAAM,QAAQ,WAAwC,CAAC,IAAmC,QAAQ;AAA3C,eAAE,aAAW,SAhBpE,IAgBuD,IAA0B,kBAA1B,IAA0B,CAAxB,aAAW;AAChE,QAAM,CAAC,eAAe,UAAU,IAAI,iBAAgC,EAAE,OAAO;AAAA,IACzE;AAAA,IACA;AAAA,IACA;AAAA,EACJ,CAAC;AAED,SACI;AAAA,IAAC,UAAU;AAAA,IAAV;AAAA,MACG;AAAA,MACA,WAAW,KAAY,KAAK,aAAa,GAAG,SAAS;AAAA,OACjD,aAHP;AAAA,MAKI;AAAA;AAAA,EACL;AAER,CAAC;AACD,MAAM,cAAc;","names":[]}