import * as react from 'react';
import { ComponentPropsWithoutRef } from 'react';
import { Primitive } from '@radix-ui/react-primitive';
import { Root as Root$1, Item as Item$1 } from '@radix-ui/react-radio-group';
import * as _vanilla_extract_recipes from '@vanilla-extract/recipes';
import { RecipeVariants } from '@vanilla-extract/recipes';

declare const control: _vanilla_extract_recipes.RuntimeFn<{
    invalid: {
        true: string;
    };
    size: {
        md: string;
        lg: string;
    };
}>;
declare const label: _vanilla_extract_recipes.RuntimeFn<{
    visuallyHidden: {
        true: string;
    };
}>;
type ControlVariants = NonNullable<RecipeVariants<typeof control>>;
type LabelVariants = NonNullable<RecipeVariants<typeof label>>;

type RadixRootProps = ComponentPropsWithoutRef<typeof Root$1>;
type PrimitiveRootProps = Pick<RadixRootProps, 'name' | 'dir' | 'loop' | 'value' | 'onValueChange' | 'defaultValue' | 'required' | 'disabled'>;
type RadioGroupRootPrimitiveProps = ComponentPropsWithoutRef<typeof Primitive.div>;
interface RadioGroupRootProps extends Omit<RadioGroupRootPrimitiveProps, keyof PrimitiveRootProps>, PrimitiveRootProps {
}
declare const Root: react.ForwardRefExoticComponent<RadioGroupRootProps & react.RefAttributes<HTMLDivElement>>;
type RadioGroupItemPrimitiveProps = ComponentPropsWithoutRef<typeof Primitive.div>;
type RadioGroupItemVariants = ControlVariants & LabelVariants;
type RadioGroupItemSharedProps = RadioGroupItemVariants & Pick<RadioGroupControlPrimitiveProps, 'value' | 'disabled'>;
interface RadioGroupItemProps extends RadioGroupItemPrimitiveProps, RadioGroupItemSharedProps {
}
declare const Item: react.ForwardRefExoticComponent<RadioGroupItemProps & react.RefAttributes<HTMLDivElement>>;
type RadioGroupControlPrimitiveProps = ComponentPropsWithoutRef<typeof Item$1>;
interface RadioGroupControlProps extends Omit<RadioGroupControlPrimitiveProps, keyof RadioGroupItemSharedProps> {
}
declare const Control: react.ForwardRefExoticComponent<RadioGroupControlProps & react.RefAttributes<HTMLButtonElement>>;
type PrimitiveLabelProps = ComponentPropsWithoutRef<typeof Primitive.label>;
interface RadioGroupLabelProps extends Omit<PrimitiveLabelProps, keyof RadioGroupItemSharedProps> {
}
declare const Label: react.ForwardRefExoticComponent<RadioGroupLabelProps & react.RefAttributes<HTMLLabelElement>>;

declare const RadioGroup: {
    Root: react.ForwardRefExoticComponent<RadioGroupRootProps & react.RefAttributes<HTMLDivElement>>;
    Item: react.ForwardRefExoticComponent<RadioGroupItemProps & react.RefAttributes<HTMLDivElement>>;
    Control: react.ForwardRefExoticComponent<RadioGroupControlProps & react.RefAttributes<HTMLButtonElement>>;
    Label: react.ForwardRefExoticComponent<RadioGroupLabelProps & react.RefAttributes<HTMLLabelElement>>;
};

export { RadioGroup, Control as RadioGroupControl, type RadioGroupControlProps, Item as RadioGroupItem, type RadioGroupItemProps, Label as RadioGroupLabel, type RadioGroupLabelProps, Root as RadioGroupRoot, type RadioGroupRootProps };
