{"version":3,"sources":["../../../src/components/theme-provider/theme-provider.tsx","../../../src/styles/global-var.css.ts","../../../src/components/theme-inject/theme-injector.ts","../../../src/components/create-theme-config/create-theme-config.ts"],"sourcesContent":["'use client';\n\nimport type { ReactNode } from 'react';\nimport { createContext, memo, useCallback, useContext, useEffect, useMemo, useState } from 'react';\n\nimport { RADIUS_FACTOR_VAR_NAME, SCALE_FACTOR_VAR_NAME } from '~/styles/global-var.css';\n\nimport { createThemeConfig } from '../create-theme-config';\nimport { THEME_CONFIG, themeInjectScript } from '../theme-inject/theme-injector';\n\nconst COLOR_BACKGROUND_PRIMARY_VAR_NAME = 'vapor-color-background-primary';\nconst COLOR_BORDER_PRIMARY_VAR_NAME = 'vapor-color-border-primary';\nconst COLOR_FOREGROUND_PRIMARY_VAR_NAME = 'vapor-color-foreground-primary';\nconst COLOR_FOREGROUND_PRIMARY_DARKER_VAR_NAME = 'vapor-color-foreground-primary-darker';\nconst COLOR_FOREGROUND_ACCENT_VAR_NAME = 'vapor-color-foreground-accent';\nconst COLOR_BACKGROUND_RGB_PRIMARY_VAR_NAME = 'vapor-color-background-rgb-primary';\n\ninterface PrimaryColorSet {\n    'vapor-color-background-primary': string;\n    'vapor-color-border-primary': string;\n    'vapor-color-foreground-primary': string;\n    'vapor-color-foreground-primary-darker': string;\n    'vapor-color-foreground-accent': string;\n    'vapor-color-background-rgb-primary': string;\n}\n\ninterface HSL {\n    h: number; // 0-360\n    s: number; // 0-1\n    l: number; // 0-1\n}\n\ntype Appearance = 'light' | 'dark';\ntype Radius = 'none' | 'sm' | 'md' | 'lg' | 'xl' | 'full';\ntype Scaling = number;\n\n/**\n * Calculates a set of primary color tokens based on a single hex color and a mode.\n * @param baseColorHex The base color in hex format (e.g., '#2A6FF3').\n * @param mode The color mode, either 'light' or 'dark'.\n * @returns A `PrimaryColorSet` object with calculated color values.\n */\nconst calculatePrimaryColorSet = (\n    baseColorHex: string,\n    mode: 'light' | 'dark',\n): PrimaryColorSet => {\n    const hexToHsl = (hex: string): HSL => {\n        let r = 0,\n            g = 0,\n            b = 0;\n        if (hex.length === 4) {\n            r = parseInt(hex[1] + hex[1], 16);\n            g = parseInt(hex[2] + hex[2], 16);\n            b = parseInt(hex[3] + hex[3], 16);\n        } else if (hex.length === 7) {\n            r = parseInt(hex.substring(1, 3), 16);\n            g = parseInt(hex.substring(3, 5), 16);\n            b = parseInt(hex.substring(5, 7), 16);\n        }\n\n        r /= 255;\n        g /= 255;\n        b /= 255;\n        const max = Math.max(r, g, b),\n            min = Math.min(r, g, b);\n        let h = 0,\n            s = 0,\n            l = (max + min) / 2;\n\n        if (max !== min) {\n            const d = max - min;\n            s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n            switch (max) {\n                case r:\n                    h = (g - b) / d + (g < b ? 6 : 0);\n                    break;\n                case g:\n                    h = (b - r) / d + 2;\n                    break;\n                case b:\n                    h = (r - g) / d + 4;\n                    break;\n            }\n            h /= 6;\n        }\n        return { h: h * 360, s, l };\n    };\n\n    const hslToHex = (hsl: HSL): string => {\n        const { h, s, l } = hsl;\n        let r, g, b;\n\n        if (s === 0) {\n            r = g = b = l; // achromatic\n        } else {\n            const hue2rgb = (p: number, q: number, t: number) => {\n                if (t < 0) t += 1;\n                if (t > 1) t -= 1;\n                if (t < 1 / 6) return p + (q - p) * 6 * t;\n                if (t < 1 / 2) return q;\n                if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;\n                return p;\n            };\n            const q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n            const p = 2 * l - q;\n            r = hue2rgb(p, q, h / 360 + 1 / 3);\n            g = hue2rgb(p, q, h / 360);\n            b = hue2rgb(p, q, h / 360 - 1 / 3);\n        }\n        const toHex = (x: number) => {\n            const hex = Math.round(x * 255).toString(16);\n            return hex.length === 1 ? '0' + hex : hex;\n        };\n        return `#${toHex(r)}${toHex(g)}${toHex(b)}`;\n    };\n\n    const hexToRgbString = (hex: string): string => {\n        let r = 0,\n            g = 0,\n            b = 0;\n        if (hex.length === 4) {\n            r = parseInt(hex[1] + hex[1], 16);\n            g = parseInt(hex[2] + hex[2], 16);\n            b = parseInt(hex[3] + hex[3], 16);\n        } else if (hex.length === 7) {\n            r = parseInt(hex.substring(1, 3), 16);\n            g = parseInt(hex.substring(3, 5), 16);\n            b = parseInt(hex.substring(5, 7), 16);\n        }\n        return `${r}, ${g}, ${b}`;\n    };\n\n    const baseHsl = hexToHsl(baseColorHex);\n\n    // Set accent color: dark for light mode, light for dark mode.\n    const accentColor = baseHsl.l > 0.5 ? 'var(--vapor-color-black)' : 'var(--vapor-color-white)';\n    const backgroundRgb = hexToRgbString(baseColorHex);\n\n    const commonColors = {\n        'vapor-color-foreground-accent': accentColor,\n        'vapor-color-background-rgb-primary': backgroundRgb,\n    };\n\n    if (mode === 'light') {\n        const foregroundHsl: HSL = { ...baseHsl, l: Math.max(0, baseHsl.l - 0.08) };\n        const foregroundDarkerHsl: HSL = {\n            ...foregroundHsl,\n            l: Math.max(0, foregroundHsl.l - 0.08),\n        };\n\n        return {\n            'vapor-color-background-primary': baseColorHex,\n            'vapor-color-border-primary': baseColorHex,\n            'vapor-color-foreground-primary': hslToHex(foregroundHsl),\n            'vapor-color-foreground-primary-darker': hslToHex(foregroundDarkerHsl),\n            ...commonColors,\n        };\n    } else {\n        const foregroundDarkerHsl: HSL = { ...baseHsl, l: Math.min(1, baseHsl.l + 0.08) };\n\n        return {\n            'vapor-color-background-primary': baseColorHex,\n            'vapor-color-border-primary': baseColorHex,\n            'vapor-color-foreground-primary': baseColorHex,\n            'vapor-color-foreground-primary-darker': hslToHex(foregroundDarkerHsl),\n            ...commonColors,\n        };\n    }\n};\n\ninterface ThemeState {\n    appearance: Appearance;\n    radius: Radius;\n    scaling: Scaling;\n    primaryColor?: string; // Hex code\n}\ninterface VaporThemeConfig extends Partial<ThemeState> {\n    /** localStorage key for persistence. */\n    storageKey?: string;\n    /** CSP nonce value. */\n    nonce?: string;\n    /** Enable system theme detection (for future extension). */\n    enableSystemTheme?: boolean;\n}\ninterface ResolvedThemeConfig extends ThemeState {\n    storageKey: string;\n    nonce?: string;\n    enableSystemTheme: boolean;\n}\n\nfunction validateThemeConfig(config: unknown): config is VaporThemeConfig {\n    if (!config || typeof config !== 'object') return true;\n\n    const c = config as Partial<VaporThemeConfig>;\n\n    if (c.appearance !== undefined && !['light', 'dark'].includes(c.appearance as Appearance)) {\n        console.warn('[@vapor-ui/core] Invalid appearance type. Expected \"light\" or \"dark\".');\n        return false;\n    }\n    if (\n        c.radius !== undefined &&\n        !Object.keys(THEME_CONFIG.RADIUS_FACTOR_MAP).includes(c.radius as Radius)\n    ) {\n        console.warn('[@vapor-ui/core] Invalid radius type. Expected a valid radius key.');\n        return false;\n    }\n    if (c.scaling !== undefined && typeof c.scaling !== 'number') {\n        console.warn('[@vapor-ui/core] Invalid scaling type. Expected a number.');\n        return false;\n    }\n    if (c.storageKey !== undefined && typeof c.storageKey !== 'string') {\n        console.warn('[@vapor-ui/core] Invalid storageKey type. Expected string.');\n        return false;\n    }\n    if (\n        c.primaryColor !== undefined &&\n        !/^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/.test(c.primaryColor)\n    ) {\n        console.warn(\n            '[@vapor-ui/core] Invalid primaryColor. Expected a valid hex code (e.g., \"#RRGGBB\").',\n        );\n        return false;\n    }\n    return true;\n}\n\n// --- ThemeProvider -----------------------------------------------------------------\n\ninterface ThemeContextValue extends ThemeState {\n    setTheme: (newTheme: Partial<ThemeState>) => void;\n}\n\nconst ThemeContext = createContext<ThemeContextValue | undefined>(undefined);\n\ninterface ThemeProviderProps {\n    children: ReactNode;\n    config?: VaporThemeConfig;\n}\n\nconst ThemeProvider = ({ children, config }: ThemeProviderProps) => {\n    const resolvedConfig = useMemo<ResolvedThemeConfig>(() => {\n        if (config) {\n            validateThemeConfig(config);\n        }\n        return createThemeConfig(config);\n    }, [config]);\n\n    const [themeState, internalSetThemeState] = useState<ThemeState>(() => {\n        const { storageKey, nonce, enableSystemTheme, ...defaultTheme } = resolvedConfig;\n        if (typeof window === 'undefined') {\n            return defaultTheme;\n        }\n        try {\n            const storedItem = localStorage.getItem(resolvedConfig.storageKey);\n            const storedSettings = storedItem ? JSON.parse(storedItem) : {};\n            return { ...defaultTheme, ...storedSettings };\n        } catch (e) {\n            console.error('[@vapor-ui/core] Failed to read theme from localStorage.', e);\n            return defaultTheme;\n        }\n    });\n\n    const setTheme = useCallback(\n        (newThemePartial: Partial<ThemeState>) => {\n            internalSetThemeState((prevState) => {\n                const updatedState = { ...prevState, ...newThemePartial };\n\n                try {\n                    localStorage.setItem(resolvedConfig.storageKey, JSON.stringify(updatedState));\n                } catch (e) {\n                    console.error(\n                        '[@vapor-ui/core] Could not save theme state to localStorage.',\n                        e,\n                    );\n                }\n                return updatedState;\n            });\n        },\n        [resolvedConfig.storageKey],\n    );\n\n    // Listen for theme changes in other tabs\n    useEffect(() => {\n        const handleStorageChange = (event: StorageEvent) => {\n            if (event.key === resolvedConfig.storageKey && event.newValue) {\n                try {\n                    internalSetThemeState(JSON.parse(event.newValue));\n                } catch (e) {\n                    console.error(\n                        '[@vapor-ui/core] Error parsing stored theme from storage event.',\n                        e,\n                    );\n                }\n            }\n        };\n        window.addEventListener('storage', handleStorageChange);\n        return () => window.removeEventListener('storage', handleStorageChange);\n    }, [resolvedConfig.storageKey]);\n\n    // Apply theme changes to the DOM\n    useEffect(() => {\n        const root = document.documentElement;\n        const { appearance, radius, scaling, primaryColor } = themeState;\n\n        // 1. Apply color theme class\n        if (appearance === 'dark') {\n            root.classList.add(THEME_CONFIG.CLASS_NAMES.dark);\n            root.classList.remove(THEME_CONFIG.CLASS_NAMES.light);\n        } else {\n            root.classList.add(THEME_CONFIG.CLASS_NAMES.light);\n            root.classList.remove(THEME_CONFIG.CLASS_NAMES.dark);\n        }\n\n        // 2. Apply radius theme\n        const radiusFactor = THEME_CONFIG.RADIUS_FACTOR_MAP[radius] ?? 1;\n        root.style.setProperty(`--${RADIUS_FACTOR_VAR_NAME}`, radiusFactor.toString());\n\n        // 3. Apply scale theme\n        const currentScaleFactor = scaling ?? 1;\n        root.style.setProperty(`--${SCALE_FACTOR_VAR_NAME}`, currentScaleFactor.toString());\n\n        // 4. Apply primary color\n        if (primaryColor) {\n            const colorSet = calculatePrimaryColorSet(primaryColor, appearance);\n\n            root.style.setProperty(\n                `--${COLOR_BACKGROUND_PRIMARY_VAR_NAME}`,\n                colorSet['vapor-color-background-primary'],\n            );\n            root.style.setProperty(\n                `--${COLOR_BORDER_PRIMARY_VAR_NAME}`,\n                colorSet['vapor-color-border-primary'],\n            );\n            root.style.setProperty(\n                `--${COLOR_FOREGROUND_PRIMARY_VAR_NAME}`,\n                colorSet['vapor-color-foreground-primary'],\n            );\n            root.style.setProperty(\n                `--${COLOR_FOREGROUND_PRIMARY_DARKER_VAR_NAME}`,\n                colorSet['vapor-color-foreground-primary-darker'],\n            );\n            root.style.setProperty(\n                `--${COLOR_FOREGROUND_ACCENT_VAR_NAME}`,\n                colorSet['vapor-color-foreground-accent'],\n            );\n            root.style.setProperty(\n                `--${COLOR_BACKGROUND_RGB_PRIMARY_VAR_NAME}`,\n                colorSet['vapor-color-background-rgb-primary'],\n            );\n        }\n    }, [themeState]);\n\n    const contextValue = useMemo(() => ({ ...themeState, setTheme }), [themeState, setTheme]);\n\n    return <ThemeContext.Provider value={contextValue}>{children}</ThemeContext.Provider>;\n};\n\n// --- ThemeScript -------------------------------------------------------------------\n\ninterface ThemeScriptProps {\n    config?: VaporThemeConfig;\n}\n\nconst ThemeScript = memo(({ config }: ThemeScriptProps) => {\n    const resolvedConfig = useMemo<ResolvedThemeConfig>(() => {\n        return createThemeConfig(config);\n    }, [config]);\n\n    const cssVarNames = {\n        radiusFactor: RADIUS_FACTOR_VAR_NAME,\n        scaleFactor: SCALE_FACTOR_VAR_NAME,\n        colorBackgroundPrimary: COLOR_BACKGROUND_PRIMARY_VAR_NAME,\n        colorBorderPrimary: COLOR_BORDER_PRIMARY_VAR_NAME,\n        colorForegroundPrimary: COLOR_FOREGROUND_PRIMARY_VAR_NAME,\n        colorForegroundPrimaryDarker: COLOR_FOREGROUND_PRIMARY_DARKER_VAR_NAME,\n        colorForegroundAccent: COLOR_FOREGROUND_ACCENT_VAR_NAME,\n        colorBackgroundRgbPrimary: COLOR_BACKGROUND_RGB_PRIMARY_VAR_NAME,\n    };\n\n    const { storageKey, nonce, enableSystemTheme, ...defaultTheme } = resolvedConfig;\n\n    const scriptContent = `(${themeInjectScript.toString()})(\n        ${JSON.stringify(defaultTheme)},\n        '${storageKey}',\n        ${JSON.stringify(THEME_CONFIG)},\n        ${JSON.stringify(cssVarNames)}\n    )`;\n\n    return (\n        <script\n            nonce={resolvedConfig.nonce}\n            suppressHydrationWarning\n            dangerouslySetInnerHTML={{ __html: scriptContent }}\n        />\n    );\n});\n\nThemeScript.displayName = 'ThemeScript';\n\n// --- Hooks -------------------------------------------------------------------------\n\nconst useTheme = (): ThemeContextValue => {\n    const context = useContext(ThemeContext);\n    if (context === undefined) {\n        throw new Error('`useTheme` must be used within a `ThemeProvider`.');\n    }\n    return context;\n};\n\n// --- Exports -----------------------------------------------------------------------\n\nexport { ThemeProvider, ThemeScript, useTheme };\nexport type { VaporThemeConfig, ThemeState, Appearance, Radius, Scaling };\n","import 'src/styles/global-var.css.ts.vanilla.css?source=QHByb3BlcnR5IC0tdmFwb3Itc2NhbGUtZmFjdG9yIHsKICBzeW50YXg6ICI8bnVtYmVyPiI7CiAgaW5oZXJpdHM6IHRydWU7CiAgaW5pdGlhbC12YWx1ZTogMTsKfQpAcHJvcGVydHkgLS12YXBvci1yYWRpdXMtZmFjdG9yIHsKICBzeW50YXg6ICI8bnVtYmVyPiI7CiAgaW5oZXJpdHM6IHRydWU7CiAgaW5pdGlhbC12YWx1ZTogMTsKfQ==';\nexport var RADIUS_FACTOR_VAR_NAME = 'vapor-radius-factor';\nexport var SCALE_FACTOR_VAR_NAME = 'vapor-scale-factor';\nexport var radiusFactorVar = 'var(--vapor-radius-factor)';\nexport var scaleFactorVar = 'var(--vapor-scale-factor)';","const DARK_CLASS_NAME = 'vapor-dark-theme';\nconst LIGHT_CLASS_NAME = 'vapor-light-theme';\n\nconst THEME_CONFIG = {\n    STORAGE_KEY: 'vapor-ui-theme',\n    CLASS_NAMES: {\n        dark: DARK_CLASS_NAME,\n        light: LIGHT_CLASS_NAME,\n    },\n    RADIUS_FACTOR_MAP: {\n        none: 0,\n        sm: 0.5,\n        md: 1,\n        lg: 1.5,\n        xl: 2,\n        full: 3,\n    },\n} as const;\n\ninterface PrimaryColorSet {\n    'vapor-color-background-primary': string;\n    'vapor-color-border-primary': string;\n    'vapor-color-foreground-primary': string;\n    'vapor-color-foreground-primary-darker': string;\n    'vapor-color-foreground-accent': string;\n    'vapor-color-background-rgb-primary': string;\n}\n\ninterface HSL {\n    h: number; // 0-360\n    s: number; // 0-1\n    l: number; // 0-1\n}\n\ntype ThemeConfig = typeof THEME_CONFIG;\ntype Appearance = keyof typeof THEME_CONFIG.CLASS_NAMES;\ntype Radius = keyof typeof THEME_CONFIG.RADIUS_FACTOR_MAP;\ntype Scaling = number;\n\ninterface ThemeState {\n    appearance: Appearance;\n    radius: Radius;\n    scaling: Scaling;\n    primaryColor?: string;\n}\n\ninterface CssVarNames {\n    radiusFactor: string;\n    scaleFactor: string;\n    colorBackgroundPrimary: string;\n    colorBorderPrimary: string;\n    colorForegroundPrimary: string;\n    colorForegroundPrimaryDarker: string;\n    colorForegroundAccent: string;\n    colorBackgroundRgbPrimary: string;\n}\n\n/**\n * A self-contained script injected into the HTML to prevent FOUC (Flash of Unstyled Content).\n *\n * @important This function is stringified and executed in an isolated scope.\n * - It cannot have any external dependencies.\n * - Avoid modern JS syntax (e.g., object spread `...`) that might be transpiled\n * into helper functions. These helpers will not be available and will cause\n * a ReferenceError. Use safer alternatives like `Object.assign`.\n */\nconst themeInjectScript = (\n    initialDefaultTheme: ThemeState,\n    storageKey: string,\n    config: ThemeConfig,\n    cssVarNames: CssVarNames,\n) => {\n    (function () {\n        const calculatePrimaryColorSet = (\n            baseColorHex: string,\n            mode: 'light' | 'dark',\n        ): PrimaryColorSet => {\n            const hexToHsl = (hex: string): HSL => {\n                let r = 0,\n                    g = 0,\n                    b = 0;\n                if (hex.length === 4) {\n                    r = parseInt(hex[1] + hex[1], 16);\n                    g = parseInt(hex[2] + hex[2], 16);\n                    b = parseInt(hex[3] + hex[3], 16);\n                } else if (hex.length === 7) {\n                    r = parseInt(hex.substring(1, 3), 16);\n                    g = parseInt(hex.substring(3, 5), 16);\n                    b = parseInt(hex.substring(5, 7), 16);\n                }\n\n                r /= 255;\n                g /= 255;\n                b /= 255;\n                const max = Math.max(r, g, b),\n                    min = Math.min(r, g, b);\n                let h = 0,\n                    s = 0,\n                    l = (max + min) / 2;\n\n                if (max !== min) {\n                    const d = max - min;\n                    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n                    switch (max) {\n                        case r:\n                            h = (g - b) / d + (g < b ? 6 : 0);\n                            break;\n                        case g:\n                            h = (b - r) / d + 2;\n                            break;\n                        case b:\n                            h = (r - g) / d + 4;\n                            break;\n                    }\n                    h /= 6;\n                }\n                return { h: h * 360, s, l };\n            };\n\n            const hslToHex = (hsl: HSL): string => {\n                const { h, s, l } = hsl;\n                let r, g, b;\n\n                if (s === 0) {\n                    r = g = b = l; // achromatic\n                } else {\n                    const hue2rgb = (p: number, q: number, t: number) => {\n                        if (t < 0) t += 1;\n                        if (t > 1) t -= 1;\n                        if (t < 1 / 6) return p + (q - p) * 6 * t;\n                        if (t < 1 / 2) return q;\n                        if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;\n                        return p;\n                    };\n                    const q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n                    const p = 2 * l - q;\n                    r = hue2rgb(p, q, h / 360 + 1 / 3);\n                    g = hue2rgb(p, q, h / 360);\n                    b = hue2rgb(p, q, h / 360 - 1 / 3);\n                }\n                const toHex = (x: number) => {\n                    const hex = Math.round(x * 255).toString(16);\n                    return hex.length === 1 ? '0' + hex : hex;\n                };\n                return `#${toHex(r)}${toHex(g)}${toHex(b)}`;\n            };\n\n            const hexToRgbString = (hex: string): string => {\n                let r = 0,\n                    g = 0,\n                    b = 0;\n                if (hex.length === 4) {\n                    r = parseInt(hex[1] + hex[1], 16);\n                    g = parseInt(hex[2] + hex[2], 16);\n                    b = parseInt(hex[3] + hex[3], 16);\n                } else if (hex.length === 7) {\n                    r = parseInt(hex.substring(1, 3), 16);\n                    g = parseInt(hex.substring(3, 5), 16);\n                    b = parseInt(hex.substring(5, 7), 16);\n                }\n                return `${r}, ${g}, ${b}`;\n            };\n\n            const baseHsl = hexToHsl(baseColorHex);\n\n            // Set accent color: dark for light mode, light for dark mode.\n            const accentColor =\n                baseHsl.l > 0.5 ? 'var(--vapor-color-black)' : 'var(--vapor-color-white)';\n            const backgroundRgb = hexToRgbString(baseColorHex);\n\n            const commonColors = {\n                'vapor-color-foreground-accent': accentColor,\n                'vapor-color-background-rgb-primary': backgroundRgb,\n            };\n\n            if (mode === 'light') {\n                const foregroundHsl = Object.assign({}, baseHsl, {\n                    l: Math.max(0, baseHsl.l - 0.08),\n                });\n                const foregroundDarkerHsl = Object.assign({}, foregroundHsl, {\n                    l: Math.max(0, foregroundHsl.l - 0.08),\n                });\n\n                return Object.assign(\n                    {\n                        'vapor-color-background-primary': baseColorHex,\n                        'vapor-color-border-primary': baseColorHex,\n                        'vapor-color-foreground-primary': hslToHex(foregroundHsl),\n                        'vapor-color-foreground-primary-darker': hslToHex(foregroundDarkerHsl),\n                    },\n                    commonColors,\n                );\n            } else {\n                const foregroundDarkerHsl = Object.assign({}, baseHsl, {\n                    l: Math.min(1, baseHsl.l + 0.08),\n                });\n\n                return Object.assign(\n                    {\n                        'vapor-color-background-primary': baseColorHex,\n                        'vapor-color-border-primary': baseColorHex,\n                        'vapor-color-foreground-primary': baseColorHex,\n                        'vapor-color-foreground-primary-darker': hslToHex(foregroundDarkerHsl),\n                    },\n                    commonColors,\n                );\n            }\n        };\n\n        const root = document.documentElement;\n        let currentThemes: ThemeState = initialDefaultTheme;\n\n        try {\n            const storedItem = localStorage.getItem(storageKey);\n            if (storedItem) {\n                const storedSettings = JSON.parse(storedItem);\n                // IMPORTANT: Use Object.assign instead of object spread (...) to avoid\n                // dependency on transpiled helper functions.\n                currentThemes = Object.assign({}, initialDefaultTheme, storedSettings);\n            }\n            // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        } catch (e) {\n            /* Fails silently */\n        }\n\n        try {\n            // 1. Apply color theme\n            if (currentThemes.appearance === 'dark') {\n                root.classList.add(config.CLASS_NAMES.dark);\n                root.classList.remove(config.CLASS_NAMES.light);\n            } else {\n                root.classList.add(config.CLASS_NAMES.light);\n                root.classList.remove(config.CLASS_NAMES.dark);\n            }\n\n            // 2. Apply radius theme\n            const radiusFactor = config.RADIUS_FACTOR_MAP[currentThemes.radius] ?? 1;\n            root.style.setProperty(`--${cssVarNames.radiusFactor}`, radiusFactor.toString());\n\n            // 3. Apply scale theme\n            const scaleFactor = currentThemes.scaling ?? 1;\n            root.style.setProperty(`--${cssVarNames.scaleFactor}`, scaleFactor.toString());\n\n            // 4. Apply primary color variables\n            if (currentThemes.primaryColor) {\n                const colorSet = calculatePrimaryColorSet(\n                    currentThemes.primaryColor,\n                    currentThemes.appearance,\n                );\n\n                root.style.setProperty(\n                    `--${cssVarNames.colorBackgroundPrimary}`,\n                    colorSet['vapor-color-background-primary'],\n                );\n                root.style.setProperty(\n                    `--${cssVarNames.colorBorderPrimary}`,\n                    colorSet['vapor-color-border-primary'],\n                );\n                root.style.setProperty(\n                    `--${cssVarNames.colorForegroundPrimary}`,\n                    colorSet['vapor-color-foreground-primary'],\n                );\n                root.style.setProperty(\n                    `--${cssVarNames.colorForegroundPrimaryDarker}`,\n                    colorSet['vapor-color-foreground-primary-darker'],\n                );\n                root.style.setProperty(\n                    `--${cssVarNames.colorForegroundAccent}`,\n                    colorSet['vapor-color-foreground-accent'],\n                );\n                root.style.setProperty(\n                    `--${cssVarNames.colorBackgroundRgbPrimary}`,\n                    colorSet['vapor-color-background-rgb-primary'],\n                );\n            }\n            // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        } catch (e) {\n            /* Fails silently */\n        }\n    })();\n};\n\nexport {\n    THEME_CONFIG,\n    themeInjectScript,\n    type ThemeConfig,\n    type Appearance,\n    type Radius,\n    type Scaling,\n    type ThemeState,\n};\n","import { THEME_CONFIG } from '../theme-inject/theme-injector';\nimport { type ThemeState } from '../theme-provider';\n\n/* -------------------------------------------------------------------------------------------------\n * Constants & Core Types\n * -----------------------------------------------------------------------------------------------*/\nconst DEFAULT_THEME: ThemeState = {\n    appearance: 'light',\n    radius: 'md',\n    scaling: 1,\n};\n\ninterface VaporThemeConfig extends Partial<ThemeState> {\n    /** localStorage key for persistence */\n    storageKey?: string;\n    /** CSP nonce value */\n    nonce?: string;\n    /** Enable system theme detection (for future extension) */\n    enableSystemTheme?: boolean;\n}\ninterface ResolvedThemeConfig extends ThemeState {\n    storageKey: string;\n    nonce?: string;\n    enableSystemTheme: boolean;\n}\n\n/**\n * Creates a complete configuration object by merging user config with defaults\n *\n * @example\n * ```tsx\n * const config = createThemeConfig({\n *   appearance: 'dark',\n *   storageKey: 'my-app-theme'\n * });\n * ```\n */\nconst createThemeConfig = (userConfig?: VaporThemeConfig): ResolvedThemeConfig => {\n    const {\n        storageKey = THEME_CONFIG.STORAGE_KEY,\n        nonce,\n        enableSystemTheme = false,\n        ...themeProps\n    } = userConfig ?? {};\n\n    return {\n        ...DEFAULT_THEME,\n        ...themeProps,\n        storageKey,\n        nonce,\n        enableSystemTheme,\n    };\n};\n\nexport { createThemeConfig };\n"],"mappings":"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","names":["calculatePrimaryColorSet","p","q","p","q"]}