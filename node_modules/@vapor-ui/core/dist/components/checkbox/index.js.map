{"version":3,"sources":["../../../src/components/checkbox/checkbox.tsx","../../../src/libs/create-context.ts","../../../src/utils/create-split-props.ts","../../../src/components/checkbox/checkbox.css.ts"],"sourcesContent":["'use client';\n\nimport type { ComponentPropsWithoutRef } from 'react';\nimport { forwardRef, useId } from 'react';\n\nimport type { CheckedState } from '@radix-ui/react-checkbox';\nimport { Indicator as RadixIndicator, Root as RadixRoot } from '@radix-ui/react-checkbox';\nimport { Primitive } from '@radix-ui/react-primitive';\nimport { useControllableState } from '@radix-ui/react-use-controllable-state';\nimport clsx from 'clsx';\n\nimport { createContext } from '~/libs/create-context';\nimport { createSplitProps } from '~/utils/create-split-props';\n\nimport type { ControlVariants, LabelVariants, RootVariants } from './checkbox.css';\nimport * as styles from './checkbox.css';\n\ntype CheckboxVariants = RootVariants & ControlVariants & LabelVariants;\ntype CheckboxSharedProps = CheckboxVariants & {\n    checked?: boolean;\n    onCheckedChange?: (checked: boolean) => void;\n    defaultChecked?: boolean;\n    indeterminate?: boolean;\n};\n\ntype CheckboxContext = CheckboxSharedProps & {\n    checkboxId?: string;\n};\n\nconst [CheckboxProvider, useCheckboxContext] = createContext<CheckboxContext>({\n    name: 'Checkbox',\n    hookName: 'useCheckbox',\n    providerName: 'CheckboxProvider',\n});\n\n/* -------------------------------------------------------------------------------------------------\n * Checkbox.Root\n * -----------------------------------------------------------------------------------------------*/\n\ntype PrimitiveRootProps = ComponentPropsWithoutRef<typeof Primitive.div>;\ninterface CheckboxRootProps\n    extends Omit<PrimitiveRootProps, keyof CheckboxSharedProps>,\n        CheckboxSharedProps {}\n\nconst Root = forwardRef<HTMLDivElement, CheckboxRootProps>(({ className, ...props }, ref) => {\n    const checkboxId = useId();\n    const [checkboxProps, otherProps] = createSplitProps<CheckboxSharedProps>()(props, [\n        'checked',\n        'onCheckedChange',\n        'defaultChecked',\n        'indeterminate',\n        'size',\n        'invalid',\n        'disabled',\n        'visuallyHidden',\n    ]);\n\n    const { disabled } = checkboxProps;\n\n    return (\n        <CheckboxProvider value={{ checkboxId, ...checkboxProps }}>\n            <Primitive.div\n                ref={ref}\n                className={clsx(styles.root({ disabled }), className)}\n                {...otherProps}\n            />\n        </CheckboxProvider>\n    );\n});\nRoot.displayName = 'Checkbox.Root';\n\n/* -------------------------------------------------------------------------------------------------\n * Checkbox.Label\n * -----------------------------------------------------------------------------------------------*/\n\ntype PrimitiveLabelProps = ComponentPropsWithoutRef<typeof Primitive.label>;\ninterface CheckboxLabelProps extends PrimitiveLabelProps {}\n\nconst Label = forwardRef<HTMLLabelElement, CheckboxLabelProps>(\n    ({ htmlFor, className, ...props }, ref) => {\n        const { checkboxId, visuallyHidden } = useCheckboxContext();\n\n        return (\n            <Primitive.label\n                ref={ref}\n                htmlFor={htmlFor || checkboxId}\n                className={clsx(styles.label({ visuallyHidden }), className)}\n                {...props}\n            />\n        );\n    },\n);\n\n/* ------------------------------------------------------------------------------------------------\n * Checkbox.Control\n * -----------------------------------------------------------------------------------------------*/\n\ntype ControlPrimitiveProps = ComponentPropsWithoutRef<typeof RadixRoot>;\ninterface CheckboxControlProps extends Omit<ControlPrimitiveProps, keyof CheckboxSharedProps> {}\n\nconst Control = forwardRef<HTMLButtonElement, CheckboxControlProps>(\n    ({ id, className, ...props }, ref) => {\n        const {\n            checkboxId,\n            checked,\n            onCheckedChange,\n            defaultChecked,\n            indeterminate,\n            invalid,\n            disabled,\n            size,\n        } = useCheckboxContext();\n\n        const [checkedState, setCheckedState] = useControllableState<CheckedState>({\n            prop: indeterminate ? 'indeterminate' : checked,\n            defaultProp: indeterminate ? 'indeterminate' : defaultChecked || false,\n            onChange: (state) => {\n                if (state === 'indeterminate') return;\n\n                onCheckedChange?.(state);\n            },\n        });\n\n        return (\n            <RadixRoot\n                ref={ref}\n                id={checkboxId || id}\n                checked={checkedState}\n                onCheckedChange={setCheckedState}\n                disabled={disabled}\n                aria-invalid={invalid}\n                className={clsx(styles.control({ invalid, size }), className)}\n                {...props}\n            >\n                <RadixIndicator className={styles.indicator({ size })}>\n                    {checkedState === 'indeterminate' && <DashIcon />}\n                    {checkedState === true && <CheckIcon />}\n                </RadixIndicator>\n            </RadixRoot>\n        );\n    },\n);\nControl.displayName = 'Checkbox.Control';\n\n/* -------------------------------------------------------------------------------------------------\n * Icons\n * -----------------------------------------------------------------------------------------------*/\n\ninterface IconProps extends ComponentPropsWithoutRef<'svg'> {}\n\nconst CheckIcon = (props: IconProps) => {\n    return (\n        <svg viewBox=\"0 0 8 7\" xmlns=\"http://www.w3.org/2000/svg\" {...props}>\n            <path\n                d=\"M11.3135 5.29325c-.391-.391-1.024-.391-1.414 0l-3.364 3.364-.829-.828c-.39-.391-1.023-.391-1.414 0-.39.39-.39 1.023 0 1.414l1.536 1.535c.39.391 1.023.391 1.414 0l4.071-4.071c.391-.39.391-1.023 0-1.414\"\n                fill=\"currentColor\"\n                fillRule=\"evenodd\"\n                transform=\"translate(-4 -5)\"\n            />\n        </svg>\n    );\n};\n\nconst DashIcon = (props: IconProps) => {\n    return (\n        <svg viewBox=\"0 0 8 2\" xmlns=\"http://www.w3.org/2000/svg\" {...props}>\n            <rect fill=\"currentColor\" fillRule=\"evenodd\" height=\"2\" rx=\"1\" width=\"8\" />\n        </svg>\n    );\n};\n\n/* -----------------------------------------------------------------------------------------------*/\n\nexport { Root as CheckboxRoot, Label as CheckboxLabel, Control as CheckboxControl };\nexport type { CheckedState, CheckboxRootProps, CheckboxLabelProps, CheckboxControlProps };\n\nexport const Checkbox = { Root, Label, Control };\n","'use client';\n\nimport { createContext as createReactContext, useContext as useReactContext } from 'react';\n\nexport type CreateContextOptions<T> = {\n    strict?: boolean;\n    hookName?: string;\n    providerName?: string;\n    errorMessage?: string;\n    name?: string;\n    defaultValue?: T;\n};\n\nexport type CreateContextReturn<T> = [React.Provider<T>, () => T, React.Context<T>];\n\nconst getErrorMessage = (hook: string, provider: string) => {\n    return `${hook} returned \\`undefined\\`. Seems you forgot to wrap component within ${provider}`;\n};\n\nexport const createContext = <T>({\n    name,\n    strict = true,\n    hookName = 'useContext',\n    providerName = 'Provider',\n    errorMessage,\n    defaultValue,\n}: CreateContextOptions<T> = {}) => {\n    const Context = createReactContext<T | undefined>(defaultValue);\n\n    Context.displayName = name;\n\n    function useContext() {\n        const context = useReactContext(Context);\n\n        if (!context && strict) {\n            const error = new Error(errorMessage ?? getErrorMessage(hookName, providerName));\n            error.name = 'ContextError';\n            throw error;\n        }\n\n        return context;\n    }\n\n    return [Context.Provider, useContext, Context] as CreateContextReturn<T>;\n};\n","type EnsureKeys<\n    ExpectedKeys extends (keyof Target)[],\n    Target,\n> = keyof Target extends ExpectedKeys[number]\n    ? unknown\n    : `Missing required keys: ${Exclude<keyof Target, ExpectedKeys[number]> & string}`;\n\nexport const createSplitProps =\n    <Target>() =>\n    <Keys extends (keyof Target)[], Props extends Target = Target>(\n        props: Props,\n        keys: Keys & EnsureKeys<Keys, Target>,\n    ) =>\n        (keys as string[]).reduce<[Target, Omit<Props, Extract<(typeof keys)[number], string>>]>(\n            (previousValue, currentValue) => {\n                const [target, source] = previousValue;\n                const key = currentValue as keyof Target & keyof typeof source;\n                if (source[key] !== undefined) {\n                    target[key] = source[key];\n                }\n                delete source[key];\n                return [target, source];\n            },\n            [{} as Target, { ...props }],\n        );\n","import 'src/styles/global-var.css.ts.vanilla.css?source=QHByb3BlcnR5IC0tdmFwb3Itc2NhbGUtZmFjdG9yIHsKICBzeW50YXg6ICI8bnVtYmVyPiI7CiAgaW5oZXJpdHM6IHRydWU7CiAgaW5pdGlhbC12YWx1ZTogMTsKfQpAcHJvcGVydHkgLS12YXBvci1yYWRpdXMtZmFjdG9yIHsKICBzeW50YXg6ICI8bnVtYmVyPiI7CiAgaW5oZXJpdHM6IHRydWU7CiAgaW5pdGlhbC12YWx1ZTogMTsKfQ==';\nimport 'src/styles/mixins/interactions.css.ts.vanilla.css?source=#H4sIAAAAAAAAA61T0WrjMBB871cshUJyWEZJfXCnvvRPiixvYlFFa1aym9zRfz9sK44pvvoKh17sWe2MdjR6dvqCDJ1uiIWhU0MefXy6e17E4fcdQG59RNYmWvLh5WX3WNni/HM31ACEmJcFNdrYeBGso6Vps1Qgc/njaehoKNh+swJGp6PtsMff/66kVIkHYkyKhnxEHxXc338k1GUg10Yc8UiNAjl+OzzE6Sey9teWdGDYfZenAKhDak741FMSV8gKPHmcI4J1ZdugwPoa2cZU0+b1yNT6ShhyxAo6zRshrv46YlE6bV631xGG0QV26GOYq7zZKtYKdlI+jECN9ljHG/KZcQcybUi2URud9XjjXm0UnQ22dPh1gv3Xw1F8zvioauqQP0RhuiSjndmMFv+L4ha+wW67ptgjHf5Hyf2q5JLvJZ1FqHVFbwrksPbNGergNjID+ZANSdhmqVY054Ws9QOkPHrik3YrJymS9vylpLwPhOm5mLa0RpT4yyJv8iKTWb7P1owtxqucpruxKuBjqTcy6xfIfF+sUi0bNqdceHhjvWF70nxJEu9/AJIYWkIaBQAA';\nimport 'src/styles/mixins/typography.css.ts.vanilla.css?source=#H4sIAAAAAAAAA+XWvW6DMBQF4D1P4bEdXBmD+WmWjN0zdIxc6gBSCgisVKTKu1dAVTqUWjrU8cCK78HWp3sxu5PsVEPOsq4amlZvdVWqUm83u1+fk48NIQ+6q6uskXXeHQ5eKyVLMzasEHIqSkVzVWS5fiRn2dxROr5iytC+5mkooR5j7H47JpXWqqFtLdOizObDQ9l+rKLBd/xYlZq2xUXNJvuKfXFRPzcdUu9/H7eveR6PG38FrzMKHqaQOEBIbBlwzCB2YBDbMvAxg8iBQWTLIMAMQgcGIWoQGQwEZiAcGAhbBiFmECwz8BGDwJZBhBn4yww4YuDbMogxA77MwEMMuC2DBP5LurmBhxoIg4HEDFgkbm4w7fnPBi+ggVjUBwwyEJb6IF3BLAQGg9cVzILJQDmZBcwAnQWTwRE04Iv6APsecEt9kDmZBczA1izkK7gXJoPrJ4F8I0h8EgAA';\nimport 'src/styles/mixins/visually-hidden.css.ts.vanilla.css?source=QGxheWVyIHZhcG9yLWNvbXBvbmVudDsKQGxheWVyIHZhcG9yLWNvbXBvbmVudCB7CiAgLnZpc3VhbGx5LWhpZGRlbl9fMXE3eHNzYTAgewogICAgcG9zaXRpb246IGFic29sdXRlOwogICAgbWFyZ2luOiAtMXB4OwogICAgYm9yZGVyOiAwOwogICAgcGFkZGluZzogMDsKICAgIHdpZHRoOiAxcHg7CiAgICBoZWlnaHQ6IDFweDsKICAgIG92ZXJmbG93OiBoaWRkZW47CiAgICB3aGl0ZS1zcGFjZTogbm93cmFwOwogICAgd29yZC13cmFwOiBub3JtYWw7CiAgICBjbGlwOiByZWN0KDAsIDAsIDAsIDApOwogIH0KfQ==';\nimport 'src/components/checkbox/checkbox.css.ts.vanilla.css?source=#H4sIAAAAAAAAA52U3W7bMAyF7/sUQq5WYCrspNmPgwF9ht0ORcFIjM1FpgRJceoNffchtromhZ3EvTN0qMOPh7AeDLToRQPOeqls7Swjx9XNw+C5+HsjxJ2qUG3X9vnpCfL7Wu+z7lgITcEZaAtBbIhRbgw+rzoFDJUsKWIdCqGQI/peKMEVogH/Scq+VaA/KIMDhTLPstu+qkEfSYGRnU8hatLa4EF7GeLJE491oCi2hcjuFvPeyVk6NJfYIMdQCLY87nOffJQ11p9idkdyYz2W3u5YS7a+BnM76vU1eTkbKJLlQng0EKnB1Wl2b6EdvmSoPPG2ENmFIH/vQqRNK5XliBw/kvLaeo3+kFb2Zb70WItgDeljUY5GkfSjGIRYg9qmeMbvvdX0d6UGv0WfLBxoTVyO0meJfjjzXxoiyBAh4o9Zp6KePX6+VEmsMaKviSHi7DFtbuI0zlMNvh2n+/bqe12yGrhMsQzafT+186BpFwZy6/WfnXy0/D3pWA2Ua6qRA1mW8/+1FVJZxauKB1HhI6jzCaiLKaiLc6ib90/bFW/a2V9xdM37iiKOg5QJ5PLw+ZTh83PDV9f3XE7puXzt+fIPY9KNb34GAAA=';\nimport { createRuntimeFn as _7a468 } from '@vanilla-extract/recipes/createRuntimeFn';\nexport var control = _7a468({defaultClassName:'interactions__13di4x95 interactions__13di4x91 interactions-scale_normal__13di4x96 interactions__13di4x93 checkbox__a14mdw7',variantClassNames:{invalid:{true:'checkbox__a14mdw8'},size:{md:'checkbox__a14mdw9',lg:'checkbox__a14mdwa'}},defaultVariants:{invalid:false,size:'md'},compoundVariants:[]});\nexport var indicator = _7a468({defaultClassName:'checkbox__a14mdwi checkbox__a14mdwf',variantClassNames:{size:{md:'checkbox__a14mdwg',lg:'checkbox__a14mdwh'}},defaultVariants:{size:'md'},compoundVariants:[]});\nexport var label = _7a468({defaultClassName:'typography__1saa0cgi typography__1saa0cgd checkbox__a14mdw4',variantClassNames:{visuallyHidden:{true:'visually-hidden__1q7xssa0'}},defaultVariants:{visuallyHidden:false},compoundVariants:[]});\nexport var root = _7a468({defaultClassName:'checkbox__a14mdw2 checkbox__a14mdw0',variantClassNames:{disabled:{true:'checkbox__a14mdw1'}},defaultVariants:{disabled:false},compoundVariants:[]});"],"mappings":"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","names":[]}