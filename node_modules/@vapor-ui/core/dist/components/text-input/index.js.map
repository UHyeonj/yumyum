{"version":3,"sources":["../../../src/components/text-input/text-input.tsx","../../../src/libs/create-context.ts","../../../src/utils/create-split-props.ts","../../../src/components/text-input/text-input.css.ts"],"sourcesContent":["'use client';\n\nimport type { ComponentPropsWithoutRef } from 'react';\nimport { forwardRef, useId } from 'react';\n\nimport { Primitive } from '@radix-ui/react-primitive';\nimport clsx from 'clsx';\n\nimport { createContext } from '~/libs/create-context';\nimport { createSplitProps } from '~/utils/create-split-props';\n\nimport type { FieldVariants, LabelVariants, RootVariants } from './text-input.css';\nimport * as styles from './text-input.css';\n\ntype TextInputVariants = RootVariants & LabelVariants & FieldVariants;\ntype TextInputSharedProps = TextInputVariants & {\n    type?: 'text' | 'email' | 'password' | 'url' | 'tel' | 'search';\n    value?: string;\n    defaultValue?: string;\n    onValueChange?: (value: string) => void;\n    readOnly?: boolean;\n    placeholder?: string;\n};\n\ntype TextInputContextType = TextInputSharedProps & {\n    textInputId?: string;\n};\n\nconst [TextInputProvider, useTextInputContext] = createContext<TextInputContextType>({\n    name: 'TextInput',\n    hookName: 'useTextInputContext',\n    providerName: 'TextInputProvider',\n});\n\n/* -------------------------------------------------------------------------------------------------\n * TextInput\n * -----------------------------------------------------------------------------------------------*/\n\ntype TextInputPrimitiveProps = ComponentPropsWithoutRef<typeof Primitive.div>;\ninterface TextInputRootProps\n    extends Omit<TextInputPrimitiveProps, keyof TextInputSharedProps>,\n        TextInputSharedProps {}\n\nconst Root = forwardRef<HTMLDivElement, TextInputRootProps>(\n    ({ className, children, ...props }, ref) => {\n        const textInputId = useId();\n        const [textInputRootProps, otherProps] = createSplitProps<TextInputSharedProps>()(props, [\n            'type',\n            'value',\n            'onValueChange',\n            'defaultValue',\n            'size',\n            'disabled',\n            'invalid',\n            'readOnly',\n            'visuallyHidden',\n            'placeholder',\n        ]);\n\n        const { disabled } = textInputRootProps;\n\n        return (\n            <TextInputProvider value={{ textInputId, ...textInputRootProps }}>\n                <Primitive.div\n                    ref={ref}\n                    className={clsx(styles.root({ disabled }), className)}\n                    {...otherProps}\n                >\n                    {children}\n                </Primitive.div>\n            </TextInputProvider>\n        );\n    },\n);\nRoot.displayName = 'TextInput.Root';\n\n/* -------------------------------------------------------------------------------------------------\n * TextInput.Label\n * -----------------------------------------------------------------------------------------------*/\n\ntype PrimitiveLabelProps = ComponentPropsWithoutRef<typeof Primitive.label>;\ninterface TextInputLabelProps extends PrimitiveLabelProps {}\n\nconst Label = forwardRef<HTMLLabelElement, TextInputLabelProps>(\n    ({ htmlFor, className, ...props }, ref) => {\n        const { textInputId = htmlFor, visuallyHidden } = useTextInputContext();\n\n        return (\n            <Primitive.label\n                ref={ref}\n                htmlFor={textInputId}\n                className={clsx(styles.label({ visuallyHidden }), className)}\n                {...props}\n            />\n        );\n    },\n);\nLabel.displayName = 'TextInput.Label';\n\n/* -------------------------------------------------------------------------------------------------\n * TextInput.Field\n * -----------------------------------------------------------------------------------------------*/\n\ntype PrimitiveInputProps = ComponentPropsWithoutRef<typeof Primitive.input>;\ninterface TextInputFieldProps extends Omit<PrimitiveInputProps, keyof TextInputSharedProps> {}\n\nconst Field = forwardRef<HTMLInputElement, TextInputFieldProps>(\n    ({ id, className, ...props }, ref) => {\n        const {\n            type,\n            textInputId = id,\n            value,\n            onValueChange,\n            defaultValue,\n            disabled,\n            invalid,\n            readOnly,\n            size,\n            placeholder,\n        } = useTextInputContext();\n\n        return (\n            <Primitive.input\n                ref={ref}\n                id={textInputId}\n                type={type}\n                value={value}\n                onChange={(event) => onValueChange?.(event.target.value)}\n                defaultValue={defaultValue}\n                disabled={disabled}\n                aria-invalid={invalid}\n                readOnly={readOnly}\n                placeholder={placeholder}\n                className={clsx(styles.field({ invalid, size }), className)}\n                {...props}\n            />\n        );\n    },\n);\nField.displayName = 'TextInput.Field';\n\n/* -----------------------------------------------------------------------------------------------*/\n\nexport { Root as TextInputRoot, Label as TextInputLabel, Field as TextInputField };\nexport type { TextInputRootProps, TextInputLabelProps, TextInputFieldProps };\n\nexport const TextInput = { Root, Label, Field };\n","'use client';\n\nimport { createContext as createReactContext, useContext as useReactContext } from 'react';\n\nexport type CreateContextOptions<T> = {\n    strict?: boolean;\n    hookName?: string;\n    providerName?: string;\n    errorMessage?: string;\n    name?: string;\n    defaultValue?: T;\n};\n\nexport type CreateContextReturn<T> = [React.Provider<T>, () => T, React.Context<T>];\n\nconst getErrorMessage = (hook: string, provider: string) => {\n    return `${hook} returned \\`undefined\\`. Seems you forgot to wrap component within ${provider}`;\n};\n\nexport const createContext = <T>({\n    name,\n    strict = true,\n    hookName = 'useContext',\n    providerName = 'Provider',\n    errorMessage,\n    defaultValue,\n}: CreateContextOptions<T> = {}) => {\n    const Context = createReactContext<T | undefined>(defaultValue);\n\n    Context.displayName = name;\n\n    function useContext() {\n        const context = useReactContext(Context);\n\n        if (!context && strict) {\n            const error = new Error(errorMessage ?? getErrorMessage(hookName, providerName));\n            error.name = 'ContextError';\n            throw error;\n        }\n\n        return context;\n    }\n\n    return [Context.Provider, useContext, Context] as CreateContextReturn<T>;\n};\n","type EnsureKeys<\n    ExpectedKeys extends (keyof Target)[],\n    Target,\n> = keyof Target extends ExpectedKeys[number]\n    ? unknown\n    : `Missing required keys: ${Exclude<keyof Target, ExpectedKeys[number]> & string}`;\n\nexport const createSplitProps =\n    <Target>() =>\n    <Keys extends (keyof Target)[], Props extends Target = Target>(\n        props: Props,\n        keys: Keys & EnsureKeys<Keys, Target>,\n    ) =>\n        (keys as string[]).reduce<[Target, Omit<Props, Extract<(typeof keys)[number], string>>]>(\n            (previousValue, currentValue) => {\n                const [target, source] = previousValue;\n                const key = currentValue as keyof Target & keyof typeof source;\n                if (source[key] !== undefined) {\n                    target[key] = source[key];\n                }\n                delete source[key];\n                return [target, source];\n            },\n            [{} as Target, { ...props }],\n        );\n","import 'src/styles/global-var.css.ts.vanilla.css?source=QHByb3BlcnR5IC0tdmFwb3Itc2NhbGUtZmFjdG9yIHsKICBzeW50YXg6ICI8bnVtYmVyPiI7CiAgaW5oZXJpdHM6IHRydWU7CiAgaW5pdGlhbC12YWx1ZTogMTsKfQpAcHJvcGVydHkgLS12YXBvci1yYWRpdXMtZmFjdG9yIHsKICBzeW50YXg6ICI8bnVtYmVyPiI7CiAgaW5oZXJpdHM6IHRydWU7CiAgaW5pdGlhbC12YWx1ZTogMTsKfQ==';\nimport 'src/styles/mixins/interactions.css.ts.vanilla.css?source=#H4sIAAAAAAAAA61T0WrjMBB871cshUJyWEZJfXCnvvRPiixvYlFFa1aym9zRfz9sK44pvvoKh17sWe2MdjR6dvqCDJ1uiIWhU0MefXy6e17E4fcdQG59RNYmWvLh5WX3WNni/HM31ACEmJcFNdrYeBGso6Vps1Qgc/njaehoKNh+swJGp6PtsMff/66kVIkHYkyKhnxEHxXc338k1GUg10Yc8UiNAjl+OzzE6Sey9teWdGDYfZenAKhDak741FMSV8gKPHmcI4J1ZdugwPoa2cZU0+b1yNT6ShhyxAo6zRshrv46YlE6bV631xGG0QV26GOYq7zZKtYKdlI+jECN9ljHG/KZcQcybUi2URud9XjjXm0UnQ22dPh1gv3Xw1F8zvioauqQP0RhuiSjndmMFv+L4ha+wW67ptgjHf5Hyf2q5JLvJZ1FqHVFbwrksPbNGergNjID+ZANSdhmqVY054Ws9QOkPHrik3YrJymS9vylpLwPhOm5mLa0RpT4yyJv8iKTWb7P1owtxqucpruxKuBjqTcy6xfIfF+sUi0bNqdceHhjvWF70nxJEu9/AJIYWkIaBQAA';\nimport 'src/styles/mixins/visually-hidden.css.ts.vanilla.css?source=QGxheWVyIHZhcG9yLWNvbXBvbmVudDsKQGxheWVyIHZhcG9yLWNvbXBvbmVudCB7CiAgLnZpc3VhbGx5LWhpZGRlbl9fMXE3eHNzYTAgewogICAgcG9zaXRpb246IGFic29sdXRlOwogICAgbWFyZ2luOiAtMXB4OwogICAgYm9yZGVyOiAwOwogICAgcGFkZGluZzogMDsKICAgIHdpZHRoOiAxcHg7CiAgICBoZWlnaHQ6IDFweDsKICAgIG92ZXJmbG93OiBoaWRkZW47CiAgICB3aGl0ZS1zcGFjZTogbm93cmFwOwogICAgd29yZC13cmFwOiBub3JtYWw7CiAgICBjbGlwOiByZWN0KDAsIDAsIDAsIDApOwogIH0KfQ==';\nimport 'src/components/text-input/text-input.css.ts.vanilla.css?source=#H4sIAAAAAAAAA62VwW7bMAyG73kKXQYsBxZOUrerc+lx5/WwYyBbrC1EpjRJTuINefdBlp0lhd0mxU4Bop8/P1IU/ax4i5btuNEWCl0bTUh+PbvzePAgyTR+syHTPN3/StifGWNCOqN4m7FXhYf1jHW/IKTFwktNGSu0amoKJ1zJkkB6rF2Ug/Pc+nBUcpOxHbdfAWJqJ38jOMMLhEWSzINmL4WvMrZIki/r2fGcCIR0PFcoNt42OPAtOj5teCF9m7HkbrUMNkZL8mgBd0jeZYw04Vs/STuu5KXdY2eXayswdEZpe0nc/QX9ueBUop2/9Q1VbVw9WH7rLA0XQlIJkpQk/LANFcqy8iMyIWskJzXBqpe+aoo5L9W+Nbq03FQtBMVLCE7SZJy2FgPt00206dW095+gfUzHaVU50PJbaJfX9zb9j7QHNdDmt9Curqd9uJ02ztlx9jy6CTrOkWWw7A4YC+AwBnaWKmi+d5J+7LpA9OFVhgolldOxnewlqiBJhvDJB/mqLZZWNySAtK25AhUyd48zBN78Rk5B+/erDJqfscphZo7jvUv73unGx3tPYpa4S8LmSh6WqcWaOa2kmN46scD5eTRYLmTjRoYknv/ojk8jxVjOi23fr+kl909zkXKY31zpYjs5vp+5tHfbl1nkAjSptm/kNTWUlrenG510zoziBVZaCbS9+TXQlST/gTHsMd9KDw65LSooOBWoIG+819RnOn1a4ycquB3/Ahthy0GgBwAA';\nimport { createRuntimeFn as _7a468 } from '@vanilla-extract/recipes/createRuntimeFn';\nexport var field = _7a468({defaultClassName:'interactions__13di4x95 interactions__13di4x91 interactions-scale_normal__13di4x96 interactions__13di4x94 text-input__npu94q5',variantClassNames:{invalid:{true:'text-input-invalid_true__npu94q7'},size:{sm:'text-input-size_sm__npu94q8',md:'text-input-size_md__npu94q9',lg:'text-input-size_lg__npu94qa',xl:'text-input-size_xl__npu94qb'}},defaultVariants:{invalid:false,size:'md'},compoundVariants:[]});\nexport var label = _7a468({defaultClassName:'text-input__npu94q3 text-input__npu94q2',variantClassNames:{visuallyHidden:{true:'visually-hidden__1q7xssa0'}},defaultVariants:{visuallyHidden:false},compoundVariants:[]});\nexport var root = _7a468({defaultClassName:'text-input__npu94q0',variantClassNames:{disabled:{true:'text-input-disabled_true__npu94q1'}},defaultVariants:{disabled:false},compoundVariants:[]});"],"mappings":"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","names":[]}