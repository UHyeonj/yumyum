import * as react from 'react';
import { ComponentPropsWithoutRef } from 'react';
import { Primitive } from '@radix-ui/react-primitive';
import * as _vanilla_extract_recipes from '@vanilla-extract/recipes';
import { RecipeVariants } from '@vanilla-extract/recipes';

declare const root: _vanilla_extract_recipes.RuntimeFn<{
    disabled: {
        true: {
            opacity: number;
            pointerEvents: "none";
        };
    };
}>;
declare const label: _vanilla_extract_recipes.RuntimeFn<{
    visuallyHidden: {
        true: string;
    };
}>;
declare const field: _vanilla_extract_recipes.RuntimeFn<{
    invalid: {
        true: {
            borderColor: `var(--${string})`;
        };
    };
    size: {
        sm: {
            paddingInline: `var(--${string})`;
            height: `var(--${string})`;
            fontSize: `var(--${string})`;
        };
        md: {
            paddingInline: `var(--${string})`;
            height: `var(--${string})`;
            fontSize: `var(--${string})`;
        };
        lg: {
            paddingInline: `var(--${string})`;
            height: `var(--${string})`;
            fontSize: `var(--${string})`;
        };
        xl: {
            paddingInline: `var(--${string})`;
            height: `var(--${string})`;
            fontSize: `var(--${string})`;
        };
    };
}>;
type RootVariants = NonNullable<RecipeVariants<typeof root>>;
type LabelVariants = NonNullable<RecipeVariants<typeof label>>;
type FieldVariants = NonNullable<RecipeVariants<typeof field>>;

type TextInputVariants = RootVariants & LabelVariants & FieldVariants;
type TextInputSharedProps = TextInputVariants & {
    type?: 'text' | 'email' | 'password' | 'url' | 'tel' | 'search';
    value?: string;
    defaultValue?: string;
    onValueChange?: (value: string) => void;
    readOnly?: boolean;
    placeholder?: string;
};
type TextInputPrimitiveProps = ComponentPropsWithoutRef<typeof Primitive.div>;
interface TextInputRootProps extends Omit<TextInputPrimitiveProps, keyof TextInputSharedProps>, TextInputSharedProps {
}
declare const Root: react.ForwardRefExoticComponent<TextInputRootProps & react.RefAttributes<HTMLDivElement>>;
type PrimitiveLabelProps = ComponentPropsWithoutRef<typeof Primitive.label>;
interface TextInputLabelProps extends PrimitiveLabelProps {
}
declare const Label: react.ForwardRefExoticComponent<TextInputLabelProps & react.RefAttributes<HTMLLabelElement>>;
type PrimitiveInputProps = ComponentPropsWithoutRef<typeof Primitive.input>;
interface TextInputFieldProps extends Omit<PrimitiveInputProps, keyof TextInputSharedProps> {
}
declare const Field: react.ForwardRefExoticComponent<TextInputFieldProps & react.RefAttributes<HTMLInputElement>>;

declare const TextInput: {
    Root: react.ForwardRefExoticComponent<TextInputRootProps & react.RefAttributes<HTMLDivElement>>;
    Label: react.ForwardRefExoticComponent<TextInputLabelProps & react.RefAttributes<HTMLLabelElement>>;
    Field: react.ForwardRefExoticComponent<TextInputFieldProps & react.RefAttributes<HTMLInputElement>>;
};

export { TextInput, Field as TextInputField, type TextInputFieldProps, Label as TextInputLabel, type TextInputLabelProps, Root as TextInputRoot, type TextInputRootProps };
